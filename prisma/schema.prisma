generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accountsGroups {
  accountsGroupsID                      Int      @id @default(autoincrement())
  name                                  String   @default("") @db.VarChar(60)
  accountGroupCounter                   Int      @default(-1)
  ord1                                  String   @default("") @db.VarChar(60)
  ord2                                  String   @default("") @db.VarChar(60)
  ord3                                  String   @default("") @db.VarChar(60)
  ord4                                  String   @default("") @db.VarChar(60)
  dontShow                              Int      @default(-1)
  createdAt                             DateTime @default(now()) @db.Timestamp(0)
  createdBy                             Int
  updatedAt                             DateTime @default(now()) @db.Timestamp(0)
  updatedBy                             Int?
  users_accountsGroups_createdByTousers users    @relation("accountsGroups_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "accountsGroups_users_1")
  users_accountsGroups_updatedByTousers users?   @relation("accountsGroups_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "accountsGroups_users_2")

  @@index([createdBy], map: "accountsGroups_users_1_idx")
  @@index([updatedBy], map: "accountsGroups_users_2_idx")
}

model banketReservations {
  bookingNumber                             Int      @default(autoincrement())
  reservationNumber                         Int      @default(-1)
  reservationStatus                         Int      @default(-1)
  reservationCharacter                      Int      @default(-1)
  bookingDate                               DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  startTime                                 String   @default("") @db.VarChar(5)
  endTime                                   String   @default("") @db.VarChar(5)
  roomNumber                                Int      @default(-1)
  customerProfile                           Int      @default(-1)
  invoiceRecipientProfile                   Int      @default(-1)
  sourceProfile                             Int      @default(-1)
  contactProfile                            Int      @default(-1)
  bookedGuests                              Int      @default(-1)
  actualGuests                              Int      @default(-1)
  eventType                                 Int      @default(-1)
  invoiceBooking                            Int      @default(-1)
  reservationDate                           DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  reservationUser                           String   @default("") @db.VarChar(50)
  loggedUser                                Int      @default(-1)
  globalReservationNumber                   Int      @default(-1)
  filePath                                  String   @default("") @db.VarChar(254)
  optionDate                                DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  roomSetup                                 Int      @default(-1)
  globalEventName                           String   @default("") @db.VarChar(120)
  globalEventName2                          String   @default("") @db.VarChar(120)
  activeFlag                                Int      @default(-1)
  marketCode                                Int      @default(-1)
  sourceCode                                Int      @default(-1)
  cancellationReasonCode                    Int      @default(-1)
  cancellationDate                          DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  cancellationUser                          String   @default("") @db.VarChar(10)
  cancellationText                          String   @default("") @db.VarChar(250)
  historicalFlag                            Int      @default(-1)
  mainRoomFlag                              Int      @default(-1)
  eventColor                                Int      @default(-1)
  confirmationNumber                        String   @default("") @db.VarChar(30)
  eventStartDate                            DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  eventEndDate                              DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  roomFixedFlag                             Int      @default(-1)
  reasonForHearing                          Int      @default(-1)
  reasonForComing                           Int      @default(-1)
  allotmentNumber                           Int      @default(-1)
  groupIdentifier                           String   @default("") @db.VarChar(50)
  error                                     Int      @default(-1)
  createdAt                                 DateTime @default(now()) @db.Timestamp(0)
  createdBy                                 Int
  updatedAt                                 DateTime @default(now()) @db.Timestamp(0)
  updatedBy                                 Int?
  users_banketReservations_createdByTousers users    @relation("banketReservations_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "banketReservations_users_1")
  users_banketReservations_updatedByTousers users?   @relation("banketReservations_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "banketReservations_users_2")

  @@id([bookingNumber, globalReservationNumber])
  @@index([createdBy], map: "banketReservations_users_1_idx")
  @@index([updatedBy], map: "banketReservations_users_2_idx")
}

model blockedRooms {
  blockedRoomID                       Int        @id @default(autoincrement())
  propertyID                          Int
  roomID                              Int        @default(-1)
  startDate                           DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  endDate                             DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  roomName                            String     @default("") @db.VarChar(20)
  roomTypeID                          Int        @default(-1)
  roomTypeName                        String     @default("") @db.VarChar(20)
  kattyp                              Int        @default(-1)
  roommmt                             Int        @default(-1)
  notes                               String     @default("") @db.VarChar(150)
  createdAt                           DateTime   @default(now()) @db.Timestamp(0)
  createdBy                           Int
  updatedAt                           DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                           Int?
  properties                          properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "blockedRooms_properties")
  roomtypes                           roomtypes  @relation(fields: [roomTypeID], references: [roomTypeID], onDelete: NoAction, onUpdate: NoAction, map: "blockedRooms_roomTypes")
  rooms                               rooms      @relation(fields: [roomID], references: [roomID], onDelete: NoAction, onUpdate: NoAction, map: "blockedRooms_rooms")
  users_blockedRooms_createdByTousers users      @relation("blockedRooms_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "blockedRooms_users_1")
  users_blockedRooms_updatedByTousers users?     @relation("blockedRooms_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "blockedRooms_users_2")

  @@index([propertyID], map: "blockedRooms_properties_idx")
  @@index([roomTypeID], map: "blockedRooms_roomTypes")
  @@index([roomID], map: "blockedRooms_rooms")
  @@index([createdBy], map: "blockedRooms_users_1_idx")
  @@index([updatedBy], map: "blockedRooms_users_2_idx")
}

model cancelationsreasons {
  cancelReasonID                             Int      @id @default(autoincrement())
  class                                      Int      @default(-1)
  name                                       String   @default("") @db.VarChar(250)
  shortName                                  String   @default("") @db.VarChar(50)
  para                                       String   @default("") @db.VarChar(100)
  para2                                      String   @default("") @db.VarChar(100)
  para3                                      Int      @default(-1)
  para4                                      Int      @default(-1)
  para5                                      Int      @default(-1)
  para6                                      Int      @default(-1)
  para7                                      Int      @default(-1)
  para8                                      String   @default("") @db.VarChar(250)
  groupKey                                   String   @default("") @db.VarChar(50)
  sortKey                                    Int      @default(-1)
  icon                                       Int      @default(-1)
  del                                        Int      @default(-1) @map("_del")
  dontShow                                   Int      @default(-1)
  hidefo                                     Int      @default(-1)
  lockdel                                    Int      @default(-1)
  inet                                       Int      @default(-1)
  createdAt                                  DateTime @default(now()) @db.Timestamp(0)
  createdBy                                  Int
  updatedAt                                  DateTime @default(now()) @db.Timestamp(0)
  updatedBy                                  Int?
  users_cancelationsreasons_createdByTousers users    @relation("cancelationsreasons_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "cancelationsreasons_users_1")
  users_cancelationsreasons_updatedByTousers users?   @relation("cancelationsreasons_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "cancelationsreasons_users_2")

  @@index([createdBy], map: "cancelationsreasons_users_1_idx")
  @@index([updatedBy], map: "cancelationsreasons_users_2_idx")
}

model cancelationtypes {
  cancelationTypeID                       Int      @id @default(autoincrement())
  abreviature                             String   @default("") @db.VarChar(250)
  description                             String   @default("") @db.VarChar(250)
  ordenation                              String   @default("") @db.VarChar(250)
  createdAt                               DateTime @default(now()) @db.Timestamp(0)
  createdBy                               Int
  updatedAt                               DateTime @default(now()) @db.Timestamp(0)
  updatedBy                               Int?
  users_cancelationtypes_createdByTousers users    @relation("cancelationtypes_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "cancelationtypes_users_1")
  users_cancelationtypes_updatedByTousers users?   @relation("cancelationtypes_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "cancelationtypes_users_2")

  @@index([createdBy], map: "cancelationtypes_users_1_idx")
  @@index([updatedBy], map: "cancelationtypes_users_2_idx")
}

model cancelledReservations {
  propertyID                                   Int
  roomsBooked                                  Int        @default(-1)
  arrivalDate                                  DateTime   @db.DateTime(0)
  departureDate                                DateTime   @db.DateTime(0)
  roomAccountName                              String     @db.VarChar(20)
  roomAccountNumber                            Int        @default(-1)
  roomTypeName                                 String     @db.VarChar(20)
  roomTypeNumber                               Int        @default(-1)
  roomTypeCategory                             Int        @default(-1)
  reservationStatus                            Int        @default(-1)
  rateCodeName                                 String     @db.VarChar(15)
  rateCodeGroup                                Int        @default(-1)
  rateCodeDetail                               Int        @default(-1)
  currency                                     Int        @default(-1)
  roomRate                                     Decimal    @default(-1) @db.Decimal(19, 0)
  adults                                       Int        @default(-1)
  children1                                    Int        @default(-1)
  children2                                    Int        @default(-1)
  children3                                    Int        @default(-1)
  children4                                    Int        @default(-1)
  rollAways                                    Int        @default(-1)
  babyCots                                     Int        @default(-1)
  marketCode                                   Int        @default(-1)
  marketingCodeGuest                           Int        @default(-1)
  VIPCodeGuest                                 Int        @default(-1)
  marketCodeName                               String     @db.VarChar(30)
  sourceCode                                   String     @db.VarChar(40)
  guestNationality                             String     @db.VarChar(30)
  guestZipCode                                 Int        @default(-1)
  sourceCodeName                               String     @db.VarChar(30)
  reservationEntryDate                         String     @db.VarChar(30)
  reservationEntryUser                         String     @db.VarChar(15)
  marketingCodeCompany                         Int        @default(-1)
  VIPCodeCompany                               DateTime   @db.DateTime(0)
  guestProfileNumber                           String     @db.VarChar(50)
  companyProfileNumber                         String     @db.VarChar(40)
  companyNationality                           String     @db.VarChar(30)
  companyZipCode                               Int        @default(-1)
  groupProfileNumber                           Int        @default(-1)
  travelAgentProfileNumber                     String     @db.VarChar(30)
  sourceProfileNumber                          String     @db.VarChar(15)
  marketingCodeGroup                           Int        @default(-1)
  VIPCodeGroup                                 Int        @default(-1)
  guestName                                    Int        @default(-1)
  companyName                                  String     @db.VarChar(40)
  groupNationality                             String     @db.VarChar(30)
  groupZipCode                                 String     @db.VarChar(80)
  groupName                                    String     @db.VarChar(80)
  travelAgentName                              String     @db.VarChar(30)
  sourceName                                   String     @db.VarChar(15)
  marketingCodeTravelAgent                     String     @db.VarChar(80)
  VIPCodeTravelAgent                           String     @db.VarChar(80)
  reservationNumber                            String     @id @db.VarChar(80)
  groupMaster                                  String     @db.VarChar(40)
  travelAgentNationality                       String     @db.VarChar(30)
  travelAgentZipCode                           Int        @default(-1)
  sharedReservationReference                   Int        @default(-1)
  allotment                                    String     @db.VarChar(30)
  allotmentNumber                              String     @db.VarChar(15)
  marketingCodeSource                          Int        @default(-1)
  vipCodeSource                                String     @db.VarChar(50)
  gender                                       Int        @default(-1)
  sourceNationality                            String     @db.VarChar(40)
  cancellationTime                             String     @db.VarChar(30)
  sourceZipCode                                String     @db.VarChar(5)
  cancellationDate                             String     @db.VarChar(30)
  cancellationReason                           String     @db.VarChar(5)
  cancellationUser                             String     @db.VarChar(15)
  cancellationReasonName                       String     @db.VarChar(150)
  cancellationReasonReference                  String     @db.VarChar(150)
  cancellationInternalNumber                   String     @db.VarChar(10)
  previousReservationStatus                    String     @db.VarChar(15)
  hearReason                                   Int        @default(-1)
  comeReason                                   String     @db.VarChar(20)
  confirmationNumber                           Int        @default(-1)
  guestGender                                  Int        @default(-1)
  firstNoteDate                                Int        @default(-1)
  firstNoteText                                String     @db.VarChar(50)
  secondNoteDate                               Int        @default(-1)
  secondNoteText                               DateTime   @db.DateTime(0)
  value1                                       String     @db.VarChar(150)
  value2                                       DateTime   @db.DateTime(0)
  userString1                                  String     @db.VarChar(150)
  userString2                                  Int        @default(-1)
  checkInNumber                                Int        @default(-1)
  additionalCheckInNumber                      String     @db.VarChar(20)
  CRSConfirmationNumber                        String     @db.VarChar(20)
  memberCardUsed                               Int        @default(-1)
  companyCommissionCode                        String     @db.VarChar(20)
  groupCommissionCode                          String     @db.VarChar(50)
  travelAgentCommissionCode                    Int        @default(-1)
  sourceCommissionCode                         Int        @default(-1)
  creditCardType                               Int        @default(-1)
  creditCardNumber                             Int        @default(-1)
  creditCardExpiry                             Int        @default(-1)
  creditCardHolder                             Int        @default(-1)
  opportunityCode                              String     @db.VarChar(70)
  overrideCode                                 String     @db.VarChar(5)
  headquarterReservationNumber                 String     @db.VarChar(50)
  IDSResourceNumber                            Decimal    @default(-1) @db.Decimal(19, 0)
  cloudReference                               BigInt     @default(-1)
  reservationCreationFlag                      Int        @default(-1)
  suiteNumber                                  String     @db.VarChar(50)
  IDSConfirmationNumber                        String     @db.VarChar(50)
  createdViaInterfaceFlag                      Int        @default(-1)
  suiteLogicID                                 Int        @default(-1)
  createdAt                                    DateTime   @default(now()) @db.Timestamp(0)
  createdBy                                    Int
  updatedAt                                    DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                                    Int?
  properties                                   properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "cancelledReservations_properties")
  users_cancelledReservations_createdByTousers users      @relation("cancelledReservations_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "cancelledReservations_users_1")
  users_cancelledReservations_updatedByTousers users?     @relation("cancelledReservations_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "cancelledReservations_users_2")

  @@index([propertyID], map: "cancelledReservations_properties_idx")
  @@index([createdBy], map: "cancelledReservations_users_1_idx")
  @@index([updatedBy], map: "cancelledReservations_users_2_idx")
}

model cashiers {
  cashierId                       Int        @id @default(autoincrement())
  propertyID                      Int
  cashierName                     String     @default("\"") @db.VarChar(40)
  password                        String     @default("\"") @db.VarChar(50)
  extCashierId                    Int        @default(-1)
  createdAt                       DateTime   @default(now()) @db.Timestamp(0)
  createdBy                       Int
  updatedAt                       DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                       Int?
  properties                      properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "cashiers_properties")
  users_cashiers_createdByTousers users      @relation("cashiers_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "cashiers_users_1")
  users_cashiers_updatedByTousers users?     @relation("cashiers_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "cashiers_users_2")

  @@index([propertyID], map: "cashiers_properties_idx")
  @@index([createdBy], map: "cashiers_users_1_idx")
  @@index([updatedBy], map: "cashiers_users_2_idx")
}

model characteristics {
  characteristicID                       Int                     @id @default(autoincrement())
  propertyID                             Int
  description                            String                  @default("") @db.VarChar(1000)
  abreviature                            String                  @default("") @db.VarChar(4)
  details                                String                  @default("") @db.VarChar(250)
  active                                 Int                     @default(1)
  createdAt                              DateTime                @default(now()) @db.Timestamp(0)
  createdBy                              Int
  updatedAt                              DateTime                @default(now()) @db.Timestamp(0)
  updatedBy                              Int?
  properties                             properties              @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "characteristics_properties")
  users_characteristics_createdByTousers users                   @relation("characteristics_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "characteristics_users_1")
  users_characteristics_updatedByTousers users?                  @relation("characteristics_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "characteristics_users_2")
  rooms_characteristics                  rooms_characteristics[]

  @@index([propertyID], map: "characteristics_properties_idx")
  @@index([createdBy], map: "characteristics_users_1_idx")
  @@index([updatedBy], map: "characteristics_users_2_idx")
}

model come {
  comeID                      Int      @id @default(autoincrement())
  className                   Int      @default(-1)
  comeName                    String   @default("") @db.VarChar(250)
  comeShortName               String   @default("") @db.VarChar(50)
  para                        String   @default("") @db.VarChar(100)
  para2                       String   @default("") @db.VarChar(100)
  para3                       Int      @default(-1)
  para4                       Int      @default(-1)
  para5                       Int      @default(-1)
  para6                       Int      @default(-1)
  para7                       Int      @default(-1)
  para8                       String   @default("") @db.VarChar(250)
  comeGroupKey                String   @default("") @db.VarChar(50)
  comeSortKey                 Int      @default(-1)
  icon                        Int      @default(-1)
  del                         Int      @default(-1) @map("_del")
  dontShow                    Int      @default(-1)
  hideFo                      Int      @default(-1)
  lockDel                     Int      @default(-1)
  inet                        Int      @default(-1)
  createdAt                   DateTime @default(now()) @db.Timestamp(0)
  createdBy                   Int
  updatedAt                   DateTime @default(now()) @db.Timestamp(0)
  updatedBy                   Int?
  users_come_createdByTousers users    @relation("come_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "come_users_1")
  users_come_updatedByTousers users?   @relation("come_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "come_users_2")

  @@index([createdBy], map: "come_users_1_idx")
  @@index([updatedBy], map: "come_users_2_idx")
}

model contacts {
  refID                           Int      @id @default(autoincrement())
  className                       Int      @default(-1)
  name                            String   @default("") @db.VarChar(250)
  shortName                       String   @default("") @db.VarChar(50)
  para                            String   @default("") @db.VarChar(100)
  para2                           String   @default("") @db.VarChar(100)
  para3                           Int      @default(-1)
  para4                           Int      @default(-1)
  para5                           Int      @default(-1)
  para6                           Int      @default(-1)
  para7                           Int      @default(-1)
  para8                           String   @default("") @db.VarChar(250)
  groupKey                        String   @default("") @db.VarChar(50)
  sortKey                         Int      @default(-1)
  icon                            Int      @default(-1)
  del                             Int      @default(-1) @map("_del")
  dontShow                        Int      @default(-1)
  hideFO                          Int      @default(-1)
  lockDel                         Int      @default(-1)
  inet                            Int      @default(-1)
  createdAt                       DateTime @default(now()) @db.Timestamp(0)
  createdBy                       Int
  updatedAt                       DateTime @default(now()) @db.Timestamp(0)
  updatedBy                       Int?
  users_contacts_createdByTousers users    @relation("contacts_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "contacts_users_1")
  users_contacts_updatedByTousers users?   @relation("contacts_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "contacts_users_2")

  @@index([createdBy], map: "contacts_users_1_idx")
  @@index([updatedBy], map: "contacts_users_2_idx")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model counters {
  tableName String @db.VarChar(255)
  records   Int

  @@ignore
}

model country {
  countryID                      Int      @id @default(autoincrement())
  countryAddress                 String   @default("") @db.VarChar(250)
  countryNationality             String   @default("") @db.VarChar(250)
  countryEmission                String   @default("") @db.VarChar(250)
  countryBilling                 String   @default("") @db.VarChar(250)
  createdAt                      DateTime @default(now()) @db.Timestamp(0)
  createdBy                      Int
  updatedAt                      DateTime @default(now()) @db.Timestamp(0)
  updatedBy                      Int?
  users_country_createdByTousers users    @relation("country_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "country_users_1")
  users_country_updatedByTousers users?   @relation("country_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "country_users_2")

  @@index([createdBy], map: "country_users_1_idx")
  @@index([updatedBy], map: "country_users_2_idx")
}

model customerPreferences {
  customerPreferencesID                      Int      @id @default(autoincrement())
  abreviature                                String   @default("") @db.VarChar(250)
  description                                String   @default("") @db.VarChar(250)
  createdAt                                  DateTime @default(now()) @db.Timestamp(0)
  createdBy                                  Int
  updatedAt                                  DateTime @default(now()) @db.Timestamp(0)
  updatedBy                                  Int?
  users_customerPreferences_createdByTousers users    @relation("customerPreferences_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "customerPreferences_users_1")
  users_customerPreferences_updatedByTousers users?   @relation("customerPreferences_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "customerPreferences_users_2")

  @@index([createdBy], map: "customerPreferences_users_1_idx")
  @@index([updatedBy], map: "customerPreferences_users_2_idx")
}

model departments {
  departmentID                       Int        @id @default(autoincrement())
  propertyID                         Int
  departmentName                     String     @default("") @db.VarChar(160)
  gruppe                             String     @default("") @db.VarChar(160)
  anzahl                             Int        @default(-1)
  showFo                             Int        @default(-1)
  ukto                               Int        @default(-1)
  keySort                            Int        @default(-1)
  hqref                              String     @default("") @db.VarChar(3)
  description                        String     @default("") @db.VarChar(6000)
  createdAt                          DateTime   @default(now()) @db.Timestamp(0)
  createdBy                          Int
  updatedAt                          DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                          Int?
  properties                         properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "departments_properties")
  users_departments_createdByTousers users      @relation("departments_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "departments_users_1")
  users_departments_updatedByTousers users?     @relation("departments_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "departments_users_2")

  @@index([propertyID], map: "departments_properties_idx")
  @@index([createdBy], map: "departments_users_1_idx")
  @@index([updatedBy], map: "departments_users_2_idx")
}

model doctypes {
  refID                           Int      @id @default(autoincrement())
  class                           Int      @default(-1)
  name                            String   @default("") @db.VarChar(250)
  shortName                       String   @default("") @db.VarChar(50)
  para                            String   @default("") @db.VarChar(100)
  para2                           String   @default("") @db.VarChar(100)
  para3                           Int      @default(-1)
  para4                           Int      @default(-1)
  para5                           Int      @default(-1)
  para6                           Int      @default(-1)
  para7                           Int      @default(-1)
  para8                           String   @default("") @db.VarChar(250)
  groupKey                        String   @default("") @db.VarChar(50)
  sortKey                         Int      @default(-1)
  icon                            Int      @default(-1)
  del                             Int      @default(-1) @map("_del")
  dontShow                        Int      @default(-1)
  hidefo                          Int      @default(-1)
  createdAt                       DateTime @default(now()) @db.Timestamp(0)
  createdBy                       Int
  updatedAt                       DateTime @default(now()) @db.Timestamp(0)
  updatedBy                       Int?
  users_doctypes_createdByTousers users    @relation("doctypes_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "doctypes_users_1")
  users_doctypes_updatedByTousers users?   @relation("doctypes_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "doctypes_users_2")

  @@index([createdBy], map: "doctypes_users_1_idx")
  @@index([updatedBy], map: "doctypes_users_2_idx")
}

model formsofknowledge {
  formsknowledgeID                        Int      @id @default(autoincrement())
  abreviature                             String   @default("") @db.VarChar(250)
  description                             String   @default("") @db.VarChar(250)
  ordenation                              String   @default("") @db.VarChar(250)
  createdAt                               DateTime @default(now()) @db.Timestamp(0)
  createdBy                               Int
  updatedAt                               DateTime @default(now()) @db.Timestamp(0)
  updatedBy                               Int?
  users_formsofknowledge_createdByTousers users    @relation("formsofknowledge_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "formsofknowledge_users_1")
  users_formsofknowledge_updatedByTousers users?   @relation("formsofknowledge_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "formsofknowledge_users_2")

  @@index([createdBy], map: "formsofknowledge_users_1_idx")
  @@index([updatedBy], map: "formsofknowledge_users_2_idx")
}

model genders {
  restypnrID                     Int      @id @default(autoincrement())
  mpehotel                       Int      @default(-1)
  restypName                     String   @default("") @db.VarChar(30)
  groupCode                      String   @default("") @db.VarChar(20)
  restypNo                       Int      @default(-1)
  showfo                         Int      @default(-1)
  ukto                           Int      @default(-1)
  artflag                        Int      @default(-1)
  sortKey                        String   @default("") @db.VarChar(3)
  headref                        String   @default("") @db.VarChar(10)
  exttext                        String   @default("") @db.VarChar(1000)
  createdAt                      DateTime @default(now()) @db.Timestamp(0)
  createdBy                      Int
  updatedAt                      DateTime @default(now()) @db.Timestamp(0)
  updatedBy                      Int?
  users_genders_createdByTousers users    @relation("genders_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "genders_users_1")
  users_genders_updatedByTousers users?   @relation("genders_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "genders_users_2")

  @@index([createdBy], map: "genders_users_1_idx")
  @@index([updatedBy], map: "genders_users_2_idx")
}

model groupratecodes {
  refID                                 Int      @id @default(autoincrement())
  className                             Int      @default(-1)
  name                                  String   @default("") @db.VarChar(250)
  shortName                             String   @default("") @db.VarChar(50)
  para                                  String   @default("") @db.VarChar(100)
  para2                                 String   @default("") @db.VarChar(100)
  para3                                 Int      @default(-1)
  para4                                 Int      @default(-1)
  para5                                 Int      @default(-1)
  para6                                 Int      @default(-1)
  para7                                 Int      @default(-1)
  para8                                 String   @default("") @db.VarChar(250)
  groupKey                              String   @default("") @db.VarChar(50)
  sortKey                               Int      @default(-1)
  icon                                  Int      @default(-1)
  del                                   Int      @default(-1) @map("_del")
  dontShow                              Int      @default(-1)
  hideFO                                Int      @default(-1)
  lockDel                               Int      @default(-1)
  inet                                  Int      @default(-1)
  createdAt                             DateTime @default(now()) @db.Timestamp(0)
  createdBy                             Int
  updatedAt                             DateTime @default(now()) @db.Timestamp(0)
  updatedBy                             Int?
  users_groupratecodes_createdByTousers users    @relation("groupratecodes_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "groupratecodes_users_1")
  users_groupratecodes_updatedByTousers users?   @relation("groupratecodes_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "groupratecodes_users_2")

  @@index([createdBy], map: "groupratecodes_users_1_idx")
  @@index([updatedBy], map: "groupratecodes_users_2_idx")
}

model guestAddress {
  guestAddressID                      Int      @id @default(autoincrement())
  mainAddress                         String?  @db.VarChar(255)
  billingAddress                      String?  @db.VarChar(255)
  createdAt                           DateTime @default(now()) @db.Timestamp(0)
  createdBy                           Int
  updatedAt                           DateTime @default(now()) @db.Timestamp(0)
  updatedBy                           Int?
  users_guestAddress_createdByTousers users    @relation("guestAddress_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestAddress_users_1")
  users_guestAddress_updatedByTousers users?   @relation("guestAddress_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestAddress_users_2")

  @@index([createdBy], map: "guestAddress_users_1_idx")
  @@index([updatedBy], map: "guestAddress_users_2_idx")
}

model guestEmails {
  guestEmailsID                      Int      @id @default(autoincrement())
  personalEmail                      String   @default("") @db.VarChar(250)
  professionalEmail                  String   @default("") @db.VarChar(250)
  emailContact1                      String   @default("") @db.VarChar(250)
  emailContact2                      String   @default("") @db.VarChar(250)
  departmentEmail                    String   @default("") @db.VarChar(250)
  generalEmail                       String   @default("") @db.VarChar(250)
  createdAt                          DateTime @default(now()) @db.Timestamp(0)
  createdBy                          Int
  updatedAt                          DateTime @default(now()) @db.Timestamp(0)
  updatedBy                          Int?
  users_guestEmails_createdByTousers users    @relation("guestEmails_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestEmails_users_1")
  users_guestEmails_updatedByTousers users?   @relation("guestEmails_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestEmails_users_2")

  @@index([createdBy], map: "guestEmails_users_1_idx")
  @@index([updatedBy], map: "guestEmails_users_2_idx")
}

model guestLocality {
  guestLocalityID                      Int      @id @default(autoincrement())
  mainLocality                         String   @default("") @db.VarChar(200)
  billinigLocality                     String   @default("") @db.VarChar(200)
  naturalLocality                      String   @default("") @db.VarChar(200)
  createdAt                            DateTime @default(now()) @db.Timestamp(0)
  createdBy                            Int
  updatedAt                            DateTime @default(now()) @db.Timestamp(0)
  updatedBy                            Int?
  users_guestLocality_createdByTousers users    @relation("guestLocality_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestLocality_users_1")
  users_guestLocality_updatedByTousers users?   @relation("guestLocality_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestLocality_users_2")

  @@index([createdBy], map: "guestLocality_users_1_idx")
  @@index([updatedBy], map: "guestLocality_users_2_idx")
}

model guestNIFs {
  guestNifID                       Int      @id @default(autoincrement())
  guestPersonalNif                 String   @default("") @db.VarChar(30)
  guestCompanyNif                  String   @default("") @db.VarChar(30)
  createdAt                        DateTime @default(now()) @db.Timestamp(0)
  createdBy                        Int
  updatedAt                        DateTime @default(now()) @db.Timestamp(0)
  updatedBy                        Int?
  users_guestNIFs_createdByTousers users    @relation("guestNIFs_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestNIFs_users_1")
  users_guestNIFs_updatedByTousers users?   @relation("guestNIFs_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestNIFs_users_2")

  @@index([createdBy], map: "guestNIFs_users_1_idx")
  @@index([updatedBy], map: "guestNIFs_users_2_idx")
}

model guestPhone {
  guestPhoneID                      Int      @id @default(autoincrement())
  personalPhone                     String   @default("") @db.VarChar(250)
  professionalPhone                 String   @default("") @db.VarChar(250)
  generalPhone                      String   @default("") @db.VarChar(250)
  departmentPhone                   String   @default("") @db.VarChar(250)
  createdAt                         DateTime @default(now()) @db.Timestamp(0)
  createdBy                         Int
  updatedAt                         DateTime @default(now()) @db.Timestamp(0)
  updatedBy                         Int?
  users_guestPhone_createdByTousers users    @relation("guestPhone_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestPhone_users_1")
  users_guestPhone_updatedByTousers users?   @relation("guestPhone_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestPhone_users_2")

  @@index([createdBy], map: "guestPhone_users_1_idx")
  @@index([updatedBy], map: "guestPhone_users_2_idx")
}

model guestProfile {
  guestProfileID                       Int      @id @default(autoincrement())
  protelID                             Int      @default(-1)
  pmsHotel                             Int      @default(-1)
  hotelkdnr                            Int      @default(-1)
  externalID                           String   @default("") @db.VarChar(15)
  outlkey                              String   @default("") @db.VarChar(64)
  memberID                             String   @default("") @db.VarChar(50)
  outlsync                             Int      @default(-1)
  outldate                             DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  memberPwd                            String   @default("") @db.VarChar(15)
  profileType                          Int      @default(-1)
  name                                 String   @default("") @db.VarChar(80)
  secondName                           String   @default("") @db.VarChar(80)
  firstName                            String   @default("") @db.VarChar(50)
  ehepartner                           String   @default("") @db.VarChar(80)
  ehegeb                               DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  strasse                              String   @default("") @db.VarChar(80)
  strasse2                             String   @default("") @db.VarChar(80)
  strasse3                             String   @default("") @db.VarChar(80)
  zipCode                              String   @default("") @db.VarChar(17)
  zipCodePostBox                       String   @default("") @db.VarChar(17)
  postBox                              String   @default("") @db.VarChar(17)
  town                                 String   @default("") @db.VarChar(50)
  address                              Int      @default(-1)
  countryAddress                       Int      @default(-1)
  district                             Int      @default(-1)
  gender                               Int      @default(-1)
  department                           String   @default("") @db.VarChar(80)
  region                               String   @default("") @db.VarChar(80)
  nationalityID                        Int      @default(-1)
  marketingID                          Int      @default(-1)
  languageID                           Int      @default(-1)
  vipCodeID                            Int      @default(-1)
  birthday                             DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  salutation                           String   @default("") @db.VarChar(40)
  personalSalutation                   String   @default("") @db.VarChar(70)
  telephoneNumber                      String   @default("") @db.VarChar(50)
  phoneNumber                          String   @default("") @db.VarChar(50)
  email                                Int      @default(-1)
  twitter                              String   @default("") @db.VarChar(80)
  websiteURL                           String   @default("") @db.VarChar(80)
  cctypn                               Int      @default(-1)
  ccexp                                String   @default("") @db.VarChar(10)
  cc                                   String   @default("") @db.VarChar(35)
  carLicence                           String   @default("") @db.VarChar(30)
  faxnr                                String   @default("") @db.VarChar(50)
  telex                                String   @default("") @db.VarChar(50)
  gdsident                             String   @default("") @db.VarChar(64)
  reservationContactName               String   @default("") @db.VarChar(80)
  iata                                 String   @default("") @db.VarChar(9)
  contractReserationNumber             String   @default("") @db.VarChar(20)
  contactReservationFirstName          String   @default("") @db.VarChar(50)
  contactReservationSalutation         String   @default("") @db.VarChar(40)
  contactReservationInformation        String   @default("") @db.VarChar(100)
  contactReservationPersonalSalutation String   @default("") @db.VarChar(70)
  contactNameInvoices                  String   @default("") @db.VarChar(80)
  contactFirstNameInvoices             String   @default("") @db.VarChar(50)
  contactSalutationInvoices            String   @default("") @db.VarChar(40)
  contactInformationInvoices           String   @default("") @db.VarChar(100)
  contactPersonalSalutationInvoices    String   @default("") @db.VarChar(70)
  title                                String   @default("") @db.VarChar(20)
  companyName                          String   @default("") @db.VarChar(50)
  companyName2                         String   @default("") @db.VarChar(50)
  profession                           String   @default("") @db.VarChar(50)
  professionRef                        Int      @default(-1)
  preferedRoom                         Int      @default(-1)
  roomFeatures                         String   @default("") @db.VarChar(50)
  guestRequests                        String   @default("") @db.VarChar(50)
  preiscode                            Int      @default(-1)
  commissionCode                       Int      @default(-1)
  commissionTaxRate1                   Int      @default(-1)
  commissionTaxRate2                   Int      @default(-1)
  deleted                              Int      @default(-1)
  creditLimitValid                     Int      @default(-1)
  creditLimit                          Decimal  @default(-1) @db.Decimal(19, 0)
  creditLimitInHouse                   Decimal  @default(-1) @db.Decimal(19, 0)
  statement                            Int      @default(-1)
  specialRates                         Int      @default(-1)
  specialRate1Person                   Decimal  @default(-1) @db.Decimal(7, 0)
  specialRate2Person                   Decimal  @default(-1) @db.Decimal(7, 0)
  specialRate3Person                   Decimal  @default(-1) @db.Decimal(7, 0)
  specialRate4Person                   Decimal  @default(-1) @db.Decimal(7, 0)
  remarks                              String   @default("") @db.VarChar(250)
  remarksRestaurant                    String   @default("") @db.VarChar(250)
  nrmStaysCurrentYear                  Int      @default(-1)
  nrmRoomNightsCurrentYear             Int      @default(-1)
  nrmNoShowCurrentYear                 Int      @default(-1)
  nrmCancellationsCurrentYear          Int      @default(-1)
  nrmStaysLastYear                     Int      @default(-1)
  nrmRoomNightsLastYear                Int      @default(-1)
  nrmNoShowLastYear                    Int      @default(-1)
  nrmCancellationsLastYear             Int      @default(-1)
  lastStay                             DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  firstStay                            DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  dateEntryProfile                     DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  timeEntryProfile                     String   @default("") @db.VarChar(10)
  userEnteredProfile                   String   @default("") @db.VarChar(50)
  lastRoomRate                         Decimal  @default(-1) @db.Decimal(19, 0)
  lastRoom                             String   @default("") @db.VarChar(10)
  nrmAccountsReceivable                String   @default("") @db.VarChar(20)
  accomodationRevenue                  Decimal  @default(-1) @db.Decimal(19, 0)
  fbRevenue                            Decimal  @default(-1) @db.Decimal(19, 0)
  otherRevenue                         Decimal  @default(-1) @db.Decimal(19, 0)
  accomodationRevenueLastYear          Decimal  @default(-1) @db.Decimal(19, 0)
  fbRevenueLastYear                    Decimal  @default(-1) @db.Decimal(19, 0)
  otherRevenueLastYear                 Decimal  @default(-1) @db.Decimal(19, 0)
  transfer                             Int      @default(-1)
  mailing                              Int      @default(-1)
  protected                            Int      @default(-1)
  changedDate                          DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  changedBy                            String   @default("") @db.VarChar(50)
  changeTime                           String   @default("") @db.VarChar(10)
  merged                               DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  mergetime                            String   @default("") @db.VarChar(10)
  tosales                              Int      @default(-1)
  documentNumber                       String   @default("") @db.VarChar(30)
  issued                               String   @default("") @db.VarChar(50)
  issuedate                            DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  discountCode                         Int      @default(-1)
  docType                              Int      @default(-1)
  expiryDateDoc                        DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  taxNumber2                           String   @default("") @db.VarChar(30)
  flags                                String   @default("") @db.VarChar(20)
  birthTown                            String   @default("") @db.VarChar(50)
  birthCountry                         Int      @default(-1)
  martialStatus                        Int      @default(-1)
  reminderCode                         Int      @default(-1)
  masterProfile                        Int      @default(-1)
  masterProfileSales                   Int      @default(-1)
  salesLedgerMaster                    Int      @default(-1)
  extend                               Int      @default(-1)
  spfrom1                              DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  spfrom2                              DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  spfrom3                              DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  spfrom4                              DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  spto1                                DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  spto2                                DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  spto3                                DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  spto4                                DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  sp1p1                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp2p1                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp3p1                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp4p1                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp1p2                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp2p2                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp3p2                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp4p2                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp1p3                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp2p3                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp3p3                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp4p3                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp1p4                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp2p4                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp3p4                                Decimal  @default(-1) @db.Decimal(7, 0)
  sp4p4                                Decimal  @default(-1) @db.Decimal(7, 0)
  user00                               String   @default("") @db.VarChar(20)
  user01                               String   @default("") @db.VarChar(20)
  user02                               Int      @default(-1)
  user03                               Int      @default(-1)
  taxExpCode                           Int      @default(-1)
  cancelFeeCode                        Int      @default(-1)
  depositCode                          Int      @default(-1)
  laundry                              Int      @default(-1)
  posrcd                               Int      @default(-1)
  emptyBedFee                          Int      @default(-1)
  shortName                            String   @default("") @db.VarChar(80)
  masterProfileName                    String   @default("") @db.VarChar(80)
  accountname                          String   @default("") @db.VarChar(80)
  otapara                              String   @default("") @db.VarChar(51)
  numcontacts                          Int      @default(-1)
  numaccounts                          Int      @default(-1)
  addressChecked                       Int      @default(-1)
  cpssrc                               String   @default("") @db.VarChar(30)
  cpsid                                String   @default("") @db.VarChar(30)
  centralProfileInfo                   String   @default("") @db.VarChar(50)
  del                                  Int      @default(-1) @map("_del")
  createdAt                            DateTime @default(now()) @db.DateTime(0)
  createdBy                            Int
  updatedAt                            DateTime @default(now()) @db.DateTime(0)
  updatedBy                            Int?
  nif                                  Int      @default(-1)
  obs1                                 String   @default("") @db.VarChar(255)
  obs2                                 String   @default("") @db.VarChar(255)
  users_guestProfile_createdByTousers  users    @relation("guestProfile_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestProfile_users_1")
  users_guestProfile_updatedByTousers  users?   @relation("guestProfile_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestProfile_users_2")

  @@index([createdBy], map: "guestProfile_users_1_idx")
  @@index([updatedBy], map: "guestProfile_users_2_idx")
}

model guestZipCode {
  guestZipCodeID                      Int      @id @default(autoincrement())
  mainZipCode                         String   @default("") @db.VarChar(200)
  billinigZipCode                     String   @default("") @db.VarChar(200)
  createdAt                           DateTime @default(now()) @db.Timestamp(0)
  createdBy                           Int
  updatedAt                           DateTime @default(now()) @db.Timestamp(0)
  updatedBy                           Int?
  users_guestZipCode_createdByTousers users    @relation("guestZipCode_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestZipCode_users_1")
  users_guestZipCode_updatedByTousers users?   @relation("guestZipCode_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "guestZipCode_users_2")

  @@index([createdBy], map: "guestZipCode_users_1_idx")
  @@index([updatedBy], map: "guestZipCode_users_2_idx")
}

model guestlanguages {
  languageID     Int      @id @default(autoincrement())
  languageName   String   @default("") @db.VarChar(75)
  defaultDeu     Int      @default(-1)
  externalNumber String   @default("") @db.VarChar(20)
  isoCode        String   @default("") @db.VarChar(3)
  createdAt      DateTime @default(now()) @db.Timestamp(0)
  createdBy      String   @default("") @db.VarChar(50)
  updatedAt      DateTime @default(now()) @db.Timestamp(0)
  updatedBy      String   @default("") @db.VarChar(50)
}

model hear {
  refID                       Int      @id @default(autoincrement())
  className                   Int      @default(-1)
  name                        String   @default("") @db.VarChar(250)
  shortName                   String   @default("") @db.VarChar(50)
  para                        String   @default("") @db.VarChar(100)
  para2                       String   @default("") @db.VarChar(100)
  para3                       Int      @default(-1)
  para4                       Int      @default(-1)
  para5                       Int      @default(-1)
  para6                       Int      @default(-1)
  para7                       Int      @default(-1)
  para8                       String   @default("") @db.VarChar(250)
  groupKey                    String   @default("") @db.VarChar(50)
  sortKey                     Int      @default(-1)
  icon                        Int      @default(-1)
  del                         Int      @default(-1) @map("_del")
  dontShow                    Int      @default(-1)
  hideFO                      Int      @default(-1)
  lockDel                     Int      @default(-1)
  inet                        Int      @default(-1)
  createdAt                   DateTime @default(now()) @db.Timestamp(0)
  createdBy                   Int
  updatedAt                   DateTime @default(now()) @db.Timestamp(0)
  updatedBy                   Int?
  users_hear_createdByTousers users    @relation("hear_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "hear_users_1")
  users_hear_updatedByTousers users?   @relation("hear_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "hear_users_2")

  @@index([createdBy], map: "hear_users_1_idx")
  @@index([updatedBy], map: "hear_users_2_idx")
}

model knowledgemethod {
  knowledgeMethodID                      Int      @id @default(autoincrement())
  abreviature                            String   @default("") @db.VarChar(250)
  description                            String   @default("") @db.VarChar(250)
  createdAt                              DateTime @default(now()) @db.Timestamp(0)
  createdBy                              Int
  updatedAt                              DateTime @default(now()) @db.Timestamp(0)
  updatedBy                              Int?
  users_knowledgemethod_createdByTousers users    @relation("knowledgemethod_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "knowledgemethod_users_1")
  users_knowledgemethod_updatedByTousers users?   @relation("knowledgemethod_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "knowledgemethod_users_2")

  @@index([createdBy], map: "knowledgemethod_users_1_idx")
  @@index([updatedBy], map: "knowledgemethod_users_2_idx")
}

model lostAndFound {
  referenceNumber                     Int        @id @default(-1)
  propertyID                          Int
  roomNumber                          Int        @default(-1)
  customerID                          Int        @default(-1)
  description                         String     @default("") @db.VarChar(254)
  date                                DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  userName                            String     @default("") @db.VarChar(50)
  isFound                             Int        @default(-1)
  foundDate                           DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  foundByUser                         String     @default("") @db.VarChar(50)
  foundText                           String     @default("") @db.VarChar(254)
  reportReference                     Int        @default(-1)
  location                            String     @default("") @db.VarChar(128)
  document                            String     @default("") @db.VarChar(254)
  submissionDate                      DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  submittedByUser                     String     @default("") @db.VarChar(50)
  foundLocation                       String     @default("") @db.VarChar(254)
  localText                           String     @default("") @db.VarChar(1000)
  createdAt                           DateTime   @default(now()) @db.Timestamp(0)
  createdBy                           Int
  updatedAt                           DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                           Int?
  properties                          properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "lostAndFound_properties")
  users_lostAndFound_createdByTousers users      @relation("lostAndFound_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "lostAndFound_users_1")
  users_lostAndFound_updatedByTousers users?     @relation("lostAndFound_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "lostAndFound_users_2")

  @@index([propertyID], map: "lostAndFound_properties_idx")
  @@index([createdBy], map: "lostAndFound_users_1_idx")
  @@index([updatedBy], map: "lostAndFound_users_2_idx")
}

model maintenance {
  maintenanceID                      Int        @id @default(autoincrement())
  propertyID                         Int
  abreviature                        String     @default("") @db.VarChar(200)
  details                            String     @default("") @db.VarChar(250)
  description                        String     @default("") @db.VarChar(250)
  active                             Int        @default(1)
  createdAt                          DateTime   @default(now()) @db.Timestamp(0)
  createdBy                          Int
  updatedAt                          DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                          Int?
  properties                         properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "maintenance_properties")
  users_maintenance_createdByTousers users      @relation("maintenance_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "maintenance_users_1")
  users_maintenance_updatedByTousers users?     @relation("maintenance_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "maintenance_users_2")

  @@index([propertyID], map: "maintenance_properties_idx")
  @@index([createdBy], map: "maintenance_users_1_idx")
  @@index([updatedBy], map: "maintenance_users_2_idx")
}

model market {
  propertyID                    Int
  marketNR                      Int        @id @default(autoincrement())
  name                          String     @default("") @db.VarChar(30)
  group                         String     @default("") @db.VarChar(20)
  anzahi                        Int        @default(-1)
  slowlo                        Int        @default(-1)
  ucto                          Int        @default(-1)
  artflag                       Int        @default(-1)
  sortKey                       String     @default("") @db.VarChar(3)
  hqref                         String     @default("") @db.VarChar(10)
  xtext                         String     @default("") @db.VarChar(1000)
  createdAt                     DateTime   @default(now()) @db.Timestamp(0)
  createdBy                     Int
  updatedAt                     DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                     Int?
  properties                    properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "market_properties")
  users_market_createdByTousers users      @relation("market_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "market_users_1")
  users_market_updatedByTousers users?     @relation("market_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "market_users_2")

  @@index([propertyID], map: "market_properties_idx")
  @@index([createdBy], map: "market_users_1_idx")
  @@index([updatedBy], map: "market_users_2_idx")
}

model marketing {
  marketingID                      Int      @id @default(autoincrement())
  abreviature                      String   @default("") @db.VarChar(250)
  description                      String   @default("") @db.VarChar(250)
  createdAt                        DateTime @default(now()) @db.Timestamp(0)
  createdBy                        Int
  updatedAt                        DateTime @default(now()) @db.Timestamp(0)
  updatedBy                        Int?
  users_marketing_createdByTousers users    @relation("marketing_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "marketing_users_1")
  users_marketing_updatedByTousers users?   @relation("marketing_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "marketing_users_2")

  @@index([createdBy], map: "marketing_users_1_idx")
  @@index([updatedBy], map: "marketing_users_2_idx")
}

model marketsegments {
  marketsegmentsID                      Int      @id @default(autoincrement())
  abreviature                           String   @default("") @db.VarChar(250)
  description                           String   @default("") @db.VarChar(250)
  ordenation                            String   @default("") @db.VarChar(250)
  createdAt                             DateTime @default(now()) @db.Timestamp(0)
  createdBy                             Int
  updatedAt                             DateTime @default(now()) @db.Timestamp(0)
  updatedBy                             Int?
  users_marketsegments_createdByTousers users    @relation("marketsegments_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "marketsegments_users_1")
  users_marketsegments_updatedByTousers users?   @relation("marketsegments_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "marketsegments_users_2")

  @@index([createdBy], map: "marketsegments_users_1_idx")
  @@index([updatedBy], map: "marketsegments_users_2_idx")
}

model member {
  memberID                      Int      @id @default(autoincrement())
  abreviature                   String   @default("") @db.VarChar(250)
  description                   String   @default("") @db.VarChar(250)
  createdAt                     DateTime @default(now()) @db.Timestamp(0)
  createdBy                     Int
  updatedAt                     DateTime @default(now()) @db.Timestamp(0)
  updatedBy                     Int?
  users_member_createdByTousers users    @relation("member_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "member_users_1")
  users_member_updatedByTousers users?   @relation("member_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "member_users_2")

  @@index([createdBy], map: "member_users_1_idx")
  @@index([updatedBy], map: "member_users_2_idx")
}

model mpehide {
  mpeHideID                      Int        @id @default(autoincrement())
  type                           Int        @default(-1)
  ref                            Int        @default(-1)
  propertyID                     Int        @default(-1)
  createdAt                      DateTime   @default(now()) @db.Timestamp(0)
  createdBy                      Int
  updatedAt                      DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                      Int?
  properties                     properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "mpehide_properties")
  users_mpehide_createdByTousers users      @relation("mpehide_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "mpehide_users_1")
  users_mpehide_updatedByTousers users?     @relation("mpehide_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "mpehide_users_2")

  @@index([propertyID], map: "mpehide_properties_idx")
  @@index([createdBy], map: "mpehide_users_1_idx")
  @@index([updatedBy], map: "mpehide_users_2_idx")
}

model nationalities {
  abkuerz                              String   @default("") @db.VarChar(20)
  land                                 String   @default("") @db.VarChar(20)
  statNr                               Int      @default(-1)
  codeNr                               Int      @id @default(autoincrement())
  sortKey                              Int      @default(-1)
  gruppe                               Int      @default(-1)
  brkopftyp                            Int      @default(-1)
  sprache                              String   @default("") @db.VarChar(4)
  isocode                              String   @default("") @db.VarChar(80)
  state                                Int      @default(-1)
  showFO                               Int      @default(-1)
  inet                                 String   @default("") @db.VarChar(80)
  nation                               String   @default("") @db.VarChar(50)
  addInfo                              Int      @default(-1)
  user01                               Int      @default(-1)
  anreisen1                            Int      @default(-1)
  anzueber1                            Int      @default(-1)
  anreisen2                            Int      @default(-1)
  anzueber2                            Int      @default(-1)
  anreisen3                            Int      @default(-1)
  anzueber3                            Int      @default(-1)
  anreisen4                            Int      @default(-1)
  anzueber4                            Int      @default(-1)
  anreisen5                            Int      @default(-1)
  anzueber5                            Int      @default(-1)
  anreisen6                            Int      @default(-1)
  anzueber6                            Int      @default(-1)
  anreisen7                            Int      @default(-1)
  anzueber7                            Int      @default(-1)
  anreisen8                            Int      @default(-1)
  anzueber8                            Int      @default(-1)
  anreisen9                            Int      @default(-1)
  anzueber9                            Int      @default(-1)
  anreisen10                           Int      @default(-1)
  anzueber10                           Int      @default(-1)
  anreisen11                           Int      @default(-1)
  anzueber11                           Int      @default(-1)
  anreisen12                           Int      @default(-1)
  anzueber12                           Int      @default(-1)
  createdAt                            DateTime @default(now()) @db.Timestamp(0)
  createdBy                            Int
  updatedAt                            DateTime @default(now()) @db.Timestamp(0)
  updatedBy                            Int?
  users_nationalities_createdByTousers users    @relation("nationalities_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "nationalities_users_1")
  users_nationalities_updatedByTousers users?   @relation("nationalities_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "nationalities_users_2")

  @@index([createdBy], map: "nationalities_users_1_idx")
  @@index([updatedBy], map: "nationalities_users_2_idx")
}

model oldReservations {
  resID                          Int        @id @default(autoincrement())
  propertyID                     Int
  arrivalDate                    DateTime   @db.DateTime(0)
  departureDate                  DateTime   @db.DateTime(0)
  roomOrAccountName              String     @db.VarChar(20)
  roomOrAccountNumber            Int        @default(-1)
  roomTypeName                   String     @db.VarChar(20)
  roomTypeNumber                 Int        @default(-1)
  roomTypeCharacter              Int        @default(-1)
  bookedRoomType                 Int        @default(-1)
  rateCodeName                   String     @db.VarChar(15)
  rateCodeGroup                  Int        @default(-1)
  rateCodeDetail                 Int        @default(-1)
  currencyID                     Int        @default(-1)
  roomRate                       Decimal    @db.Decimal(19, 0)
  numberOfAdults                 Int        @default(-1)
  numberOfChildren1              Int        @default(-1)
  numberOfChildren2              Int        @default(-1)
  numberOfChildren3              Int        @default(-1)
  numberOfChildren4              Int        @default(-1)
  numberOfRollAways              Int        @default(-1)
  numberOfBabyCots               Int        @default(-1)
  marketCodeName                 String     @db.VarChar(30)
  marketCode                     Int        @default(-1)
  sourceCodeName                 String     @db.VarChar(30)
  sourceCode                     Int        @default(-1)
  reservationDate                DateTime   @db.DateTime(0)
  guestMarketingCodeName         String     @db.VarChar(40)
  guestVIPCodeName               String     @db.VarChar(30)
  reservationUser                String     @db.VarChar(50)
  accommodationRevenue           Decimal    @db.Decimal(19, 0)
  guestNationalityName           String     @db.VarChar(30)
  guestZIPCode                   String     @db.VarChar(15)
  foodAndBeverageRevenue         Decimal    @db.Decimal(19, 0)
  otherRevenue                   Decimal    @db.Decimal(19, 0)
  guestProfileID                 Int        @default(-1)
  companyName                    String     @db.VarChar(40)
  companyVIPCodeName             String     @db.VarChar(30)
  guestNationalityCode           Int        @default(-1)
  guestRegion                    Int        @default(-1)
  companyNationalityName         String     @db.VarChar(30)
  companyZIPCode                 String     @db.VarChar(15)
  companyProfileID               Int        @default(-1)
  groupProfileID                 Int        @default(-1)
  travelAgentProfileID           Int        @default(-1)
  groupMarketingCodeName         String     @db.VarChar(40)
  groupVIPCodeName               String     @db.VarChar(30)
  sourceProfileID                Int        @default(-1)
  groupNationalityName           String     @db.VarChar(30)
  guestName                      String     @db.VarChar(80)
  groupZIPCode                   String     @db.VarChar(15)
  groupName                      String     @db.VarChar(80)
  travelAgentName                String     @db.VarChar(80)
  travelAgentMarketingCodeName   String     @db.VarChar(40)
  travelAgentVIPCodeName         String     @db.VarChar(30)
  sourceName                     String     @db.VarChar(80)
  travelAgentNationalityName     String     @db.VarChar(30)
  reservationNumber              Int        @default(-1)
  groupMasterReservation         Int        @default(-1)
  travelAgentZIPCode             String     @db.VarChar(15)
  sharedReservationReference     Int        @default(-1)
  allotment                      String     @db.VarChar(50)
  sourceMarketingCodeName        String     @db.VarChar(40)
  sourceVIPCodeName              String     @db.VarChar(30)
  allotmentID                    Int        @default(-1)
  genderText                     String     @db.VarChar(5)
  sourceNationalityName          String     @db.VarChar(30)
  sourceZIPCode                  String     @db.VarChar(15)
  hearReason                     String     @db.VarChar(11)
  hearReasonNumber               Int        @default(-1)
  comeReason                     String     @db.VarChar(11)
  comeReasonNumber               Int        @default(-1)
  invoiceRecipientA              Int        @default(-1)
  invoiceRecipientB              Int        @default(-1)
  invoiceRecipientC              Int        @default(-1)
  invoiceRecipientD              Int        @default(-1)
  invoiceRecipientE              Int        @default(-1)
  invoiceRecipientF              Int        @default(-1)
  paymentMethodA                 Int        @default(-1)
  paymentMethodB                 Int        @default(-1)
  paymentMethodC                 Int        @default(-1)
  paymentMethodD                 Int        @default(-1)
  paymentMethodE                 Int        @default(-1)
  paymentMethodF                 Int        @default(-1)
  headquarterReservationNumber   Int        @default(-1)
  oldReservationStatus           Int        @default(-1)
  oldDepartureDate               DateTime   @db.DateTime(0)
  roomMoveInformation            String     @db.VarChar(50)
  confirmationNumber             String     @db.VarChar(50)
  remarks                        String     @db.VarChar(250)
  checkInInformationFlightNumber String     @db.VarChar(30)
  checkOutInformation            String     @db.VarChar(30)
  genderID                       Int        @default(-1)
  firstNoteDate                  DateTime   @db.DateTime(0)
  firstNoteText                  String     @db.VarChar(150)
  secondNoteDate                 DateTime   @db.DateTime(0)
  secondNoteText                 String     @db.VarChar(150)
  userDefinedField               String     @db.VarChar(20)
  freeUseIntegerField1           Int        @default(-1)
  freeUseIntegerField2           Int        @default(-1)
  freeUseStringField1            String     @db.VarChar(20)
  freeUseStringField2            String     @db.VarChar(20)
  continuousCheckInNumber        Int        @default(-1)
  additionalCheckInNumber        String     @db.VarChar(20)
  CRSConfirmationNumber          String     @db.VarChar(50)
  memberCardUsed                 Int        @default(-1)
  companyCommissionCode          Int        @default(-1)
  groupCommissionCode            Int        @default(-1)
  travelAgentCommissionCode      Int        @default(-1)
  sourceCommissionCode           Int        @default(-1)
  pickupCode                     Int        @default(-1)
  opportunityCost                Decimal    @db.Decimal(19, 0)
  overrideCode                   Int        @default(-1)
  IDSConfirmationNumber          String     @db.VarChar(50)
  IREssource                     Int        @default(-1)
  cloudReference                 BigInt     @default(-1)
  createdViaInterfaceFlag        Int        @default(-1)
  suiteLogicID                   Int        @default(-1)
  createdAt                      DateTime   @default(now()) @db.Timestamp(0)
  createdBy                      Int
  updatedAt                      DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                      Int?
  properties                     properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "oldReservations_properties")
  users                          users      @relation(fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "oldReservations_users_1")

  @@index([propertyID], map: "oldReservations_properties_idx")
  @@index([createdBy], map: "oldReservations_users_1_idx")
  @@index([updatedBy], map: "oldReservations_users_2_idx")
}

model paymentmethods {
  externalNumberShort                          String   @default("\"") @db.VarChar(10)
  name                                         String   @default("\"") @db.VarChar(40)
  primary                                      Int      @id
  mainGroup                                    Int      @default(-1)
  paymentType                                  Int      @default(-1)
  salesBookEntryLimit                          Int      @default(-1)
  inventoryCheckFlag                           Int      @default(-1)
  hiddenInFrontOffice                          Int      @default(-1)
  noSalesBookEntry                             Int      @default(-1)
  notAvailableForSettlementPayment             Int      @default(-1)
  availableForSettlementPaymentOnly            Int      @default(-1)
  EFT                                          Int      @default(-1)
  VATNumber                                    Int      @default(-1)
  reservationStatus                            Int      @default(-1)
  availableOnInternet                          Int      @default(-1)
  doNotDisplayOnInvoice                        Int      @default(-1)
  currency                                     Int      @default(-1)
  exchangeRate                                 Decimal  @default(-1) @db.Decimal(19, 0)
  standardCommissionPercentageForCheckExchange Decimal  @default(-1) @db.Decimal(19, 0)
  creditCardVerificationCode                   Int      @default(-1)
  statisticsGroup                              Int      @default(-1)
  module                                       Int      @default(-1)
  datevAccount                                 Int      @default(-1)
  order1                                       String   @default("\"") @db.VarChar(25)
  order2                                       String   @default("\"") @db.VarChar(25)
  order3                                       String   @default("\"") @db.VarChar(25)
  order4                                       String   @default("\"") @db.VarChar(25)
  accountNumberForAccounting                   String   @default("\"") @db.VarChar(20)
  costCenter1                                  String   @default("\"") @db.VarChar(20)
  costCenter2                                  String   @default("\"") @db.VarChar(20)
  incomeStatementAccountForAccounting          String   @default("\"") @db.VarChar(11)
  provisionPercentage                          String   @default("\"") @db.VarChar(20)
  flags                                        String   @default("\"") @db.VarChar(20)
  createdAt                                    DateTime @default(now()) @db.Timestamp(0)
  createdBy                                    Int
  updatedAt                                    DateTime @default(now()) @db.Timestamp(0)
  updatedBy                                    Int?
  users_paymentmethods_createdByTousers        users    @relation("paymentmethods_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "paymentmethods_users_1")
  users_paymentmethods_updatedByTousers        users?   @relation("paymentmethods_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "paymentmethods_users_2")

  @@index([createdBy], map: "paymentmethods_users_1_idx")
  @@index([updatedBy], map: "paymentmethods_users_2_idx")
}

model pmsgroup {
  pmsg Int    @id @default(autoincrement())
  name String @default("") @db.VarChar(50)
}

model pmshotel {
  pmsh          Int    @id @default(autoincrement())
  pmsg          Int    @default(-1)
  pmsLic        Int    @default(-1)
  pmsHq         Int    @default(-1)
  pmsHqcl       Int    @default(-1)
  pmsPool       Int    @default(-1)
  demoID        Int    @default(-1)
  smartLicid    Int    @default(-1)
  smartOption   String @default("") @db.VarChar(250)
  customerId    Int    @default(-1)
  lang          Int    @default(-1)
  license       Int    @default(-1)
  hotel         String @default("") @db.VarChar(100)
  abbreviation  String @default("") @db.VarChar(100)
  homepage      String @default("") @db.VarChar(200)
  dealerName    String @default("") @db.VarChar(50)
  hotelnum      String @default("") @db.VarChar(100)
  hotelnum2     String @default("") @db.VarChar(100)
  startDate     String @default("") @db.VarChar(8)
  expiryDate    Int    @default(-1)
  numOfRooms    Int    @default(-1)
  workstationId Int    @default(-1)
  code          Int    @default(-1)
  locationRef   Int    @default(-1)
  roomTypeColor Int    @default(-1)
  hotelTypeRef  Int    @default(-1)
  class0Ref     Int    @default(-1)
  class1Ref     Int    @default(-1)
  class2Ref     Int    @default(-1)
  class3Ref     Int    @default(-1)
  class4Ref     Int    @default(-1)
  inet          Int    @default(-1)
  deletionMark  Int    @default(-1)
}

model profession {
  professionID                      Int      @id @default(autoincrement())
  gruppe                            Int      @default(-1)
  abreviature                       String   @default("") @db.VarChar(50)
  description                       String   @default("") @db.VarChar(250)
  ordenation                        Int      @default(-1)
  property                          Int      @default(-1)
  createdAt                         DateTime @default(now()) @db.Timestamp(0)
  createdBy                         Int
  updatedAt                         DateTime @default(now()) @db.Timestamp(0)
  updatedBy                         Int?
  users_profession_createdByTousers users    @relation("profession_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "profession_users_1")
  users_profession_updatedByTousers users?   @relation("profession_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "profession_users_2")

  @@index([createdBy], map: "profession_users_1_idx")
  @@index([updatedBy], map: "profession_users_2_idx")
}

model properties {
  propertyID            Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(250)
  fiscalNumber          Int
  email                 String                  @db.VarChar(250)
  phoneNumber           String                  @db.VarChar(45)
  address1              String                  @db.VarChar(250)
  country               String                  @db.VarChar(250)
  district              String                  @db.VarChar(250)
  zipCode               String                  @db.VarChar(45)
  description           String                  @db.VarChar(250)
  abbreviation          String                  @db.VarChar(10)
  designation           String                  @db.VarChar(50)
  organizationID        Int
  del                   Int                     @default(0)
  blockedRooms          blockedRooms[]
  cancelledReservations cancelledReservations[]
  cashiers              cashiers[]
  characteristics       characteristics[]
  departments           departments[]
  lostAndFound          lostAndFound[]
  maintenance           maintenance[]
  market                market[]
  mpehide               mpehide[]
  oldReservations       oldReservations[]
  ratecodedetails       ratecodedetails[]
  reservations          reservations[]
  revenueAccounts       revenueAccounts[]
  rooms                 rooms[]
  roomtypes             roomtypes[]
  roomtypesgroups       roomtypesgroups[]
}

model ratecodedetails {
  rateCodeDetID                          Int        @id @default(autoincrement())
  propertyID                             Int
  rateCodeID                             Int        @default(-1)
  rateCodeDetName                        String     @default("") @db.VarChar(20)
  roomType1                              Int        @default(-1)
  roomType2                              Int        @default(-1)
  roomType3                              Int        @default(-1)
  roomType4                              Int        @default(-1)
  roomType5                              Int        @default(-1)
  roomID                                 Int        @default(-1)
  stayLen1                               Int        @default(-1)
  stayLen2                               Int        @default(-1)
  minAdults                              Int        @default(-1)
  maxAdults                              Int        @default(-1)
  season                                 Int        @default(-1)
  valid                                  Int        @default(-1)
  offline                                Int        @default(-1)
  currency                               Int        @default(-1)
  validFrom                              DateTime   @default(dbgenerated("'1900-01-01'")) @db.Date
  validUntil                             DateTime   @default(dbgenerated("'1900-01-01'")) @db.Date
  bookFrom                               DateTime   @default(dbgenerated("'1900-01-01'")) @db.Date
  bookUntil                              DateTime   @default(dbgenerated("'1900-01-01'")) @db.Date
  internalName                           String     @default("") @db.VarChar(20)
  notValidInDays                         String     @default("") @db.VarChar(50)
  exportScript                           String     @default("") @db.VarChar(50)
  packageNr                              Int        @default(-1)
  onePackage                             Int        @default(-1)
  postingText                            String     @default("") @db.VarChar(50)
  postingText2                           String     @default("") @db.VarChar(50)
  postingText3                           String     @default("") @db.VarChar(50)
  postingText4                           String     @default("") @db.VarChar(50)
  postingText5                           String     @default("") @db.VarChar(50)
  postingText6                           String     @default("") @db.VarChar(50)
  splittab                               Int        @default(-1)
  booked                                 Int        @default(-1)
  logiswg                                Int        @default(-1)
  market                                 Int        @default(-1)
  source                                 Int        @default(-1)
  yieldLvl                               Int        @default(-1)
  guaranteeCode                          Int        @default(-1)
  voidFeeCode                            Int        @default(-1)
  noYield                                Int        @default(-1)
  hideRateAvail                          Int        @default(-1)
  copyBatch                              Int        @default(-1)
  fixCost                                Decimal    @default(-1.00) @db.Decimal(19, 2)
  stayCost                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  personCost                             Decimal    @default(-1.00) @db.Decimal(19, 2)
  extrates                               String     @default("") @db.VarChar(1024)
  p1                                     Decimal    @default(-1.00) @db.Decimal(19, 2)
  p2                                     Decimal    @default(-1.00) @db.Decimal(19, 2)
  p3                                     Decimal    @default(-1.00) @db.Decimal(19, 2)
  p4                                     Decimal    @default(-1.00) @db.Decimal(19, 2)
  p5                                     Decimal    @default(-1.00) @db.Decimal(19, 2)
  p6                                     Decimal    @default(-1.00) @db.Decimal(19, 2)
  mp1                                    Decimal    @default(-1.00) @db.Decimal(19, 2)
  mp2                                    Decimal    @default(-1.00) @db.Decimal(19, 2)
  mp3                                    Decimal    @default(-1.00) @db.Decimal(19, 2)
  mp4                                    Decimal    @default(-1.00) @db.Decimal(19, 2)
  mp5                                    Decimal    @default(-1.00) @db.Decimal(19, 2)
  mp6                                    Decimal    @default(-1.00) @db.Decimal(19, 2)
  we1                                    Int        @default(-1)
  we2                                    Int        @default(-1)
  we3                                    Int        @default(-1)
  we4                                    Int        @default(-1)
  we5                                    Int        @default(-1)
  we6                                    Int        @default(-1)
  we7                                    Int        @default(-1)
  an1                                    Int        @default(-1)
  an2                                    Int        @default(-1)
  an3                                    Int        @default(-1)
  an4                                    Int        @default(-1)
  an5                                    Int        @default(-1)
  an6                                    Int        @default(-1)
  an7                                    Int        @default(-1)
  wep1                                   Decimal    @default(-1.00) @db.Decimal(19, 2)
  wep2                                   Decimal    @default(-1.00) @db.Decimal(19, 2)
  wep3                                   Decimal    @default(-1.00) @db.Decimal(19, 2)
  wep4                                   Decimal    @default(-1.00) @db.Decimal(19, 2)
  wep5                                   Decimal    @default(-1.00) @db.Decimal(19, 2)
  wep6                                   Decimal    @default(-1.00) @db.Decimal(19, 2)
  wemp1                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  wemp2                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  wemp3                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  wemp4                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  wemp5                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  wemp6                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  stab1                                  Int        @default(-1)
  stab2                                  Int        @default(-1)
  stab3                                  Int        @default(-1)
  stab4                                  Int        @default(-1)
  stab5                                  Int        @default(-1)
  stab6                                  Int        @default(-1)
  stab7                                  Int        @default(-1)
  stab8                                  Int        @default(-1)
  stab9                                  Int        @default(-1)
  stab10                                 Int        @default(-1)
  kinde1                                 Decimal    @default(-1.00) @db.Decimal(19, 2)
  kinde2                                 Decimal    @default(-1.00) @db.Decimal(19, 2)
  kinde3                                 Decimal    @default(-1.00) @db.Decimal(19, 2)
  kinde4                                 Decimal    @default(-1.00) @db.Decimal(19, 2)
  kinde5                                 Decimal    @default(-1.00) @db.Decimal(19, 2)
  kinde6                                 Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind1                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind2                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind3                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind4                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind5                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind6                                  Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind1pc1                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind1pc2                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind1pc3                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind2pc1                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind2pc2                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind2pc3                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind3pc1                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind3pc2                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind3pc3                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind4pc1                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind4pc2                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind4pc3                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind5pc1                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind5pc2                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind5pc3                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind6pc1                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind6pc2                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind6pc3                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind1pcx                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind2pcx                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind3pcx                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind4pcx                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind5pcx                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind6pcx                               Decimal    @default(-1.00) @db.Decimal(19, 2)
  kind1x                                 Int        @default(-1)
  kind2x                                 Int        @default(-1)
  kind3x                                 Int        @default(-1)
  kind4x                                 Int        @default(-1)
  kind5x                                 Int        @default(-1)
  kind6x                                 Int        @default(-1)
  createdAt                              DateTime   @default(now()) @db.Timestamp(0)
  createdBy                              Int
  updatedAt                              DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                              Int?
  properties                             properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "ratecodedetails_properties")
  users_ratecodedetails_createdByTousers users      @relation("ratecodedetails_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "ratecodedetails_users_1")
  users_ratecodedetails_updatedByTousers users?     @relation("ratecodedetails_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "ratecodedetails_users_2")

  @@index([propertyID], map: "ratecodedetails_properties_idx")
  @@index([createdBy], map: "ratecodedetails_users_1_idx")
  @@index([updatedBy], map: "ratecodedetails_users_2_idx")
}

model ratecodes {
  rategrpID                        Int      @id @default(autoincrement())
  ratergrpExID                     String   @default("") @db.VarChar(255)
  raterName                        String   @default("") @db.VarChar(15)
  gdsCode                          String   @default("") @db.VarChar(20)
  promoCode                        String   @default("") @db.VarChar(20)
  raterlongText                    String   @default("") @db.VarChar(250)
  raterlongText2                   String   @default("") @db.VarChar(1040)
  ratergrpSort                     Int      @default(-1)
  ratergrpTyp                      Int      @default(-1)
  raterSpecial                     Int      @default(-1)
  nonCom                           Int      @default(-1)
  nonDisc                          Int      @default(-1)
  inet                             Int      @default(-1)
  hideRegCard                      Int      @default(-1)
  inetSort                         Int      @default(-1)
  rategrp                          Int      @default(-1)
  rateGrpFollow                    Int      @default(-1)
  routeCode                        Int      @default(-1)
  routeTarg                        Int      @default(-1)
  resStatus                        Int      @default(-1)
  depositCode                      Int      @default(-1)
  cancelCode                       Int      @default(-1)
  guarReq                          Int      @default(-1)
  holdtime                         String   @default("") @db.VarChar(10)
  gdsName                          String   @default("") @db.VarChar(50)
  gdsDescrip                       String   @default("") @db.VarChar(255)
  otagtyp                          String   @default("") @db.VarChar(50)
  otaCom                           Decimal  @default(0) @db.Decimal(19, 0)
  otaQual                          Int      @default(-1)
  otaType                          Int      @default(-1)
  noYield                          Int      @default(-1)
  noRateavail                      Int      @default(-1)
  virtualRategrp                   String   @default("") @db.VarChar(2048)
  ghaAvail                         Int      @default(-1)
  createdAt                        DateTime @default(now()) @db.Timestamp(0)
  createdBy                        Int
  updatedAt                        DateTime @default(now()) @db.Timestamp(0)
  updatedBy                        Int?
  users_ratecodes_createdByTousers users    @relation("ratecodes_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "ratecodes_users_1")
  users_ratecodes_updatedByTousers users?   @relation("ratecodes_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "ratecodes_users_2")

  @@index([createdBy], map: "ratecodes_users_1_idx")
  @@index([updatedBy], map: "ratecodes_users_1_idx1")
}

model replacementcode {
  replacementcodeID                      Int      @id @default(autoincrement())
  abreviature                            String   @default("") @db.VarChar(250)
  description                            String   @default("") @db.VarChar(250)
  ordenation                             String   @default("") @db.VarChar(250)
  createdAt                              DateTime @default(now()) @db.Timestamp(0)
  createdBy                              Int
  updatedAt                              DateTime @default(now()) @db.Timestamp(0)
  updatedBy                              Int?
  users_replacementcode_createdByTousers users    @relation("replacementcode_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "replacementcode_users_1")
  users_replacementcode_updatedByTousers users?   @relation("replacementcode_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "replacementcode_users_2")

  @@index([createdBy], map: "replacementcode_users_1_idx")
  @@index([updatedBy], map: "replacementcode_users_2_idx")
}

model reservationchange {
  reservationchangeID                      Int      @id @default(autoincrement())
  abreviature                              String   @default("") @db.VarChar(250)
  description                              String   @default("") @db.VarChar(250)
  ordenation                               String   @default("") @db.VarChar(250)
  createdAt                                DateTime @default(now()) @db.Timestamp(0)
  createdBy                                Int
  updatedAt                                DateTime @default(now()) @db.Timestamp(0)
  updatedBy                                Int?
  users_reservationchange_createdByTousers users    @relation("reservationchange_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "reservationchange_users_1")
  users_reservationchange_updatedByTousers users?   @relation("reservationchange_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "reservationchange_users_2")

  @@index([createdBy], map: "reservationchange_users_1_idx")
  @@index([updatedBy], map: "reservationchange_users_2_idx")
}

model reservations {
  reservationID                       Int        @id @default(autoincrement())
  propertyID                          Int
  roomCount                           Int        @default(-1)
  checkInDate                         DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  checkOutDate                        DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  roomNumber                          Int        @default(-1)
  guestNumber                         Int        @default(-1)
  bookingStatus                       Int        @default(-1)
  reservationStatus                   Int        @default(-1)
  reservationCharacter                Int        @default(-1)
  roomTypeNumber                      Int        @default(-1)
  reservationMode                     Int        @default(-1)
  hotelNumber                         Int        @default(-1)
  content                             String     @default("") @db.VarChar(20)
  rateCodeGroup                       Int        @default(-1)
  forKey                              Int        @default(-1)
  rateCodeNumber                      Int        @default(-1)
  roomRate                            Decimal    @default(-1) @db.Decimal(19, 0)
  chdbok                              Int        @default(-1)
  rateChangeFlag                      Int        @default(-1)
  groupNumber                         Int        @default(-1)
  travelAgentNumber                   Int        @default(-1)
  companyNumber                       Int        @default(-1)
  sourceNumber                        Int        @default(-1)
  originalRoomTypeNumber              Int        @default(-1)
  adultCount                          Int        @default(-1)
  child1Count                         Int        @default(-1)
  child2Count                         Int        @default(-1)
  child3Count                         Int        @default(-1)
  child4Count                         Int        @default(-1)
  invoiceRecipientA                   Int        @default(-1)
  invoiceRecipientB                   Int        @default(-1)
  invoiceRecipientC                   Int        @default(-1)
  invoiceRecipientD                   Int        @default(-1)
  invoiceRecipientE                   Int        @default(-1)
  invoiceRecipientF                   Int        @default(-1)
  invoiceRoutingA                     Int        @default(-1)
  invoiceRoutingB                     Int        @default(-1)
  invoiceRoutingC                     Int        @default(-1)
  invoiceRoutingD                     Int        @default(-1)
  invoiceRoutingE                     Int        @default(-1)
  invoiceWindowA                      String     @default("") @db.VarChar(60)
  invoiceWindowB                      String     @default("") @db.VarChar(60)
  invoiceWindowC                      String     @default("") @db.VarChar(60)
  invoiceWindowD                      String     @default("") @db.VarChar(60)
  invoiceWindowE                      String     @default("") @db.VarChar(60)
  invoiceWindowF                      String     @default("") @db.VarChar(60)
  paymentMethodA                      String     @default("") @db.VarChar(60)
  paymentMethodB                      Int        @default(-1)
  paymentMethodC                      Int        @default(-1)
  paymentMethodD                      Int        @default(-1)
  paymentMethodE                      Int        @default(-1)
  paymentMethodF                      Int        @default(-1)
  overnightChargeDate                 DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  globalBookingNumber                 Int        @default(-1)
  globalCheckInDate                   DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  globalCheckOutDate                  DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  invoiceNumberA                      Int        @default(-1)
  invoiceNumberB                      Int        @default(-1)
  invoiceNumberC                      Int        @default(-1)
  invoiceNumberD                      Int        @default(-1)
  invoiceNumberE                      Int        @default(-1)
  invoiceNumberF                      Int        @default(-1)
  note1Date                           DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  note1Text                           String     @default("") @db.VarChar(150)
  note2Date                           DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  note2Text                           String     @default("") @db.VarChar(150)
  arrivalTime                         String     @default("") @db.VarChar(5)
  departureTime                       String     @default("") @db.VarChar(5)
  additionalBedCount                  Int        @default(-1)
  babyCodCount                        Int        @default(-1)
  invoicePrintMode                    Int        @default(-1)
  groupMasterAccount                  Int        @default(-1)
  invoiceFolioCountA                  Int        @default(-1)
  invoiceFolioCountB                  Int        @default(-1)
  invoiceFolioCountC                  Int        @default(-1)
  invoiceFolioCountD                  Int        @default(-1)
  invoiceFolioCountE                  Int        @default(-1)
  invoiceFolioCountF                  Int        @default(-1)
  reservationEnteredBy                String     @default("") @db.VarChar(50)
  roomMoveIndicator                   Int        @default(-1)
  optionDate                          DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  basePrice                           Decimal    @default(-1) @db.Decimal(19, 0)
  reservationDate                     DateTime   @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  sharingReference                    Int        @default(-1)
  invoiceTemplateNumber               Int        @default(-1)
  marketCode                          Int        @default(-1)
  sourceCode                          Int        @default(-1)
  linenChangeDays                     Int        @default(-1)
  reservationFixedFlag                Int        @default(-1)
  allocationNumber                    Int        @default(-1)
  globalReservationNumber             Int        @default(-1)
  eventFlag                           Int        @default(-1)
  string1                             String     @default("") @db.VarChar(50)
  creditCardCancellationReason        String     @default("") @db.VarChar(150)
  cancellationUser                    String     @default("") @db.VarChar(10)
  cancellationTime                    String     @default("") @db.VarChar(5)
  cxl                                 Int        @default(-1)
  cancellationNumber                  String     @default("") @db.VarChar(20)
  gender                              String     @default("") @db.VarChar(5)
  genderCode                          Int        @default(-1)
  voucher                             String     @default("") @db.VarChar(14)
  checkInInformation                  String     @default("") @db.VarChar(30)
  checkOutInformation                 String     @default("") @db.VarChar(30)
  creditCardType                      String     @default("") @db.VarChar(10)
  creditCardExpiryDate                String     @default("") @db.VarChar(5)
  creditCardNumber                    String     @default("") @db.VarChar(70)
  cochkgdg                            String     @default("") @db.VarChar(4)
  creditCardHolder                    String     @default("") @db.VarChar(50)
  safenr                              Int        @default(-1)
  hearReference                       Int        @default(-1)
  comeReference                       Int        @default(-1)
  pickupReference                     Int        @default(-1)
  continuousCheckInNumber             Int        @default(-1)
  furtherContinuousCheckInNumber      String     @default("") @db.VarChar(20)
  roomColor                           Int        @default(-1)
  color1                              Int        @default(-1)
  modifiedFlag                        Int        @default(-1)
  oldReservationStatus                Int        @default(-1)
  originalPrice                       Decimal    @default(-1) @db.Decimal(19, 0)
  taxExemptionCode                    Int        @default(-1)
  oldDepartureDate                    DateTime?  @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  value1                              Int        @default(-1)
  value2                              Int        @default(-1)
  userString1                         String     @default("") @db.VarChar(20)
  userString2                         String     @default("") @db.VarChar(20)
  userDate1                           DateTime?  @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  discount                            Int        @default(-1)
  discountValue                       Decimal    @default(-1) @db.Decimal(19, 0)
  promotion                           String     @default("") @db.VarChar(20)
  bookerName                          String     @default("") @db.VarChar(254)
  crsNumber                           String     @default("") @db.VarChar(50)
  hideRateOnRegisterCardFlag          Int        @default(-1)
  memberCardUsed                      Int        @default(-1)
  commissionCodeGuest                 Int        @default(-1)
  commissionCodeCompany               Int        @default(-1)
  commissionCodeGroup                 Int        @default(-1)
  commissionCodeTravelAgent           Int        @default(-1)
  commissionCodeSource                Int        @default(-1)
  igmpreis                            Int        @default(-1)
  hqclient                            String     @default("") @db.VarChar(500)
  hqbookingNumber                     Int        @default(-1)
  reservationDateSql                  DateTime?  @db.DateTime(0)
  channelReference                    Int        @default(-1)
  channelData                         String     @default("") @db.VarChar(500)
  channelRestoreBookingNumber         Int        @default(-1)
  channelRestoreData                  String     @default("") @db.VarChar(500)
  modifiedForecastFlag                Int        @default(-1)
  channelRoomTypeNumber               Int        @default(-1)
  modifiedmulti                       Int        @default(-1)
  xmlInfo                             String     @default("") @db.VarChar(500)
  extInfo                             String     @default("") @db.VarChar(500)
  opportunityCost                     Decimal    @default(-1) @db.Decimal(19, 0)
  overrideCode                        Int        @default(-1)
  changeUser                          Int        @default(-1)
  idsNumber                           String     @default("") @db.VarChar(50)
  cloudReference                      Int        @default(-1)
  notDeleteFlag                       Int        @default(-1)
  iressource                          Int        @default(-1)
  suite                               Int        @default(-1)
  deleteFlag                          Int        @default(-1)
  ppXmlCreatereservation              Int        @default(-1)
  createdAt                           DateTime   @default(now()) @db.Timestamp(0)
  createdBy                           Int
  updatedAt                           DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                           Int?
  nightCount                          Int        @default(-1)
  languageID                          Int        @default(-1)
  properties                          properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "reservations_properties")
  users_reservations_createdByTousers users      @relation("reservations_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "reservations_users_1")
  users_reservations_updatedByTousers users?     @relation("reservations_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "reservations_users_2")

  @@index([propertyID], map: "reservations_properties_idx")
  @@index([createdBy], map: "reservations_users_1_idx")
  @@index([updatedBy], map: "reservations_users_2_idx")
}

model reservationstatus {
  resID                                    Int      @id @default(autoincrement())
  status                                   String   @default("") @db.VarChar(100)
  reschar                                  Int      @default(-1)
  resmark                                  String   @default("") @db.VarChar(50)
  rgb                                      Int      @default(-1)
  createdAt                                DateTime @default(now()) @db.Timestamp(0)
  createdBy                                Int
  updatedAt                                DateTime @default(now()) @db.Timestamp(0)
  updatedBy                                Int?
  users_reservationstatus_createdByTousers users    @relation("reservationstatus_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "reservationstatus_users_1")
  users_reservationstatus_updatedByTousers users?   @relation("reservationstatus_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "reservationstatus_users_2")

  @@index([createdBy], map: "reservationstatus_users_1_idx")
  @@index([updatedBy], map: "reservationstatus_users_2_idx")
}

model revenueAccounts {
  revenueAccountID                       Int        @id @default(autoincrement())
  propertyID                             Int
  abreviature                            String     @default("") @db.VarChar(10)
  name                                   String     @default("") @db.VarChar(40)
  details                                String     @default("") @db.VarChar(40)
  accountsGroupsID                       String     @default("") @db.VarChar(200)
  taxesID                                Int        @default(-1)
  tax1                                   Decimal    @default(-1) @db.Decimal(10, 0)
  tax2                                   Decimal    @default(-1) @db.Decimal(10, 0)
  tax3                                   Decimal    @default(-1) @db.Decimal(10, 0)
  externalTaxRate                        Decimal    @default(-1) @db.Decimal(10, 0)
  externalTax                            Decimal    @default(-1) @db.Decimal(19, 0)
  taxMode                                Int        @default(-1)
  extaxmode2                             Int        @default(-1)
  extaxRevenueAccount                    Int        @default(-1)
  extaxtext2                             String     @default("") @db.VarChar(20)
  extax3                                 Decimal    @default(-1) @db.Decimal(10, 0)
  extax3anz                              Decimal    @default(-1) @db.Decimal(19, 0)
  extaxukto3                             Int        @default(-1)
  extaxtext3                             String     @default("") @db.VarChar(20)
  extax4                                 Decimal    @default(-1) @db.Decimal(10, 0)
  extax4anz                              Decimal    @default(-1) @db.Decimal(19, 0)
  extaxukto4                             Int        @default(-1)
  extaxtext4                             String     @default("") @db.VarChar(20)
  extax5                                 Decimal    @default(-1) @db.Decimal(10, 0)
  extax5anz                              Decimal    @default(-1) @db.Decimal(19, 0)
  extaxukto5                             Int        @default(-1)
  extaxtext5                             String     @default("") @db.VarChar(20)
  extax6                                 Decimal    @default(-1) @db.Decimal(10, 0)
  extax6anz                              Decimal    @default(-1) @db.Decimal(19, 0)
  extaxukto6                             Int        @default(-1)
  extaxtext6                             String     @default("") @db.VarChar(20)
  extax7                                 Decimal    @default(-1) @db.Decimal(10, 0)
  extax7anz                              Decimal    @default(-1) @db.Decimal(19, 0)
  extaxukto7                             Int        @default(-1)
  extaxtext7                             String     @default("") @db.VarChar(20)
  extaxsub                               Int        @default(-1)
  extaxsub2                              Int        @default(-1)
  extaxsub3                              Int        @default(-1)
  extaxsub4                              Int        @default(-1)
  extaxsub5                              Int        @default(-1)
  extaxsub6                              Int        @default(-1)
  extaxsub7                              Int        @default(-1)
  currency                               Int        @default(-1)
  unitPrice                              Decimal    @default(-1) @db.Decimal(19, 0)
  statisticGroup                         Int        @default(-1)
  autoTransfer                           Int        @default(-1)
  winsAndLoss                            String     @default("") @db.VarChar(20)
  costCentre1                            String     @default("") @db.VarChar(20)
  costCentre2                            String     @default("") @db.VarChar(20)
  datevAccount                           Int        @default(-1)
  kasbuch                                Int        @default(-1)
  cashExpense                            Int        @default(-1)
  isPack                                 Int        @default(-1)
  isFixed                                Int        @default(-1)
  taxgrpmode                             Int        @default(-1)
  ifckonto                               Int        @default(-1)
  ifckontoHideInSd                       Int        @default(-1)
  boardingCode                           Int        @default(-1)
  redvat                                 Int        @default(-1)
  payReceipt                             Int        @default(-1)
  redvatdays                             Int        @default(-1)
  order1                                 String     @default("") @db.VarChar(25)
  order2                                 String     @default("") @db.VarChar(25)
  order3                                 String     @default("") @db.VarChar(25)
  order4                                 String     @default("") @db.VarChar(25)
  inet                                   Int        @default(-1)
  transitAccountRef                      Int        @default(-1)
  lastDaysRevenue                        Decimal    @default(-1) @db.Decimal(19, 0)
  monthRevenue                           Decimal    @default(-1) @db.Decimal(19, 0)
  fiscalYearRevenue                      Decimal    @default(-1) @db.Decimal(19, 0)
  createdAt                              DateTime   @default(now()) @db.Timestamp(0)
  createdBy                              Int?
  updatedAt                              DateTime   @default(now()) @db.Timestamp(0)
  updatedBy                              Int?
  properties                             properties @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "revenueAccounts_properties")
  users_revenueAccounts_createdByTousers users?     @relation("revenueAccounts_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "revenueAccounts_users_1")
  users_revenueAccounts_updatedByTousers users?     @relation("revenueAccounts_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "revenueAccounts_users_2")

  @@index([propertyID], map: "revenueAccounts_properties_idx")
  @@index([createdBy], map: "revenueAccounts_users_1_idx")
  @@index([updatedBy], map: "revenueAccounts_users_2_idx")
}

model rooms {
  roomID                       Int                     @id @default(autoincrement())
  label                        String                  @default("") @db.VarChar(20)
  roomType                     Int                     @default(-1)
  propertyID                   Int
  description                  String                  @default("") @db.VarChar(50)
  description2                 String                  @default("") @db.VarChar(50)
  temptext                     String                  @default("") @db.VarChar(250)
  defaultRateCode              Int                     @default(-1)
  defaultGuestNr               Int                     @default(-1)
  hkDept                       String                  @default("") @db.VarChar(20)
  roomPos                      Int                     @default(-1)
  group                        Int                     @default(-1)
  authorized                   Int                     @default(-1)
  kz1                          String                  @default("") @db.VarChar(20)
  kz2                          String                  @default("") @db.VarChar(20)
  kz3                          String                  @default("") @db.VarChar(20)
  kz4                          String                  @default("") @db.VarChar(20)
  floor                        Int                     @default(-1)
  cardroid                     String                  @default("") @db.VarChar(20)
  active                       Int                     @default(1)
  createdAt                    DateTime                @default(now()) @db.Timestamp(0)
  createdBy                    Int
  updatedAt                    DateTime                @default(now()) @db.Timestamp(0)
  updatedBy                    Int?
  roomCharacteristicID         Int                     @default(-1)
  blockedRooms                 blockedRooms[]
  properties                   properties              @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "rooms_properties")
  roomtypes                    roomtypes               @relation(fields: [roomType], references: [roomTypeID], onDelete: NoAction, onUpdate: NoAction, map: "rooms_roomTypes")
  users_rooms_createdByTousers users                   @relation("rooms_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "rooms_users_1")
  users_rooms_updatedByTousers users?                  @relation("rooms_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "rooms_users_2")
  rooms_characteristics        rooms_characteristics[]

  @@index([propertyID], map: "rooms_properties_idx")
  @@index([roomType], map: "rooms_roomTypes")
  @@index([createdBy, updatedBy], map: "rooms_users_1_idx")
  @@index([updatedBy], map: "rooms_users_2_idx")
}

model rooms_characteristics {
  roomCharacteristicsID                        Int             @id @default(autoincrement())
  roomID                                       Int             @default(0)
  characteristicID                             Int             @default(0)
  createdAt                                    DateTime        @default(now()) @db.Timestamp(0)
  createdBy                                    Int
  updatedAt                                    DateTime        @default(now()) @db.Timestamp(0)
  updatedBy                                    Int?
  characteristics                              characteristics @relation(fields: [characteristicID], references: [characteristicID], onDelete: NoAction, onUpdate: NoAction, map: "roomsCharacteristics_characteristics")
  rooms                                        rooms           @relation(fields: [roomID], references: [roomID], onDelete: NoAction, onUpdate: NoAction, map: "roomsCharacteristics_rooms")
  users_rooms_characteristics_createdByTousers users           @relation("rooms_characteristics_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "roomsCharacteristics_users_1")
  users_rooms_characteristics_updatedByTousers users?          @relation("rooms_characteristics_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "roomsCharacteristics_users_2")

  @@unique([roomID, characteristicID], map: "roomID_characteristicID")
  @@index([characteristicID], map: "roomsCharacteristics_characteristics")
  @@index([createdBy], map: "roomsCharacteristics_users_1_idx")
  @@index([updatedBy], map: "roomsCharacteristics_users_2_idx")
}

model roomtypes {
  roomTypeID                       Int             @id @default(autoincrement())
  propertyID                       Int
  name                             String          @default("") @db.VarChar(20)
  desc                             String          @default("") @db.VarChar(250)
  roomFeaturesDesc                 String          @default("") @db.VarChar(250)
  externalDesc                     String          @default("") @db.VarChar(250)
  groupID                          Int
  isRoom                           Int             @default(-1)
  isAccount                        Int             @default(-1)
  isGroupMaster                    Int             @default(-1)
  confirmationOne                  String          @default("") @db.VarChar(500)
  confirmationTwo                  String          @default("") @db.VarChar(500)
  confirmationThree                String          @default("") @db.VarChar(500)
  confirmationFour                 String          @default("") @db.VarChar(500)
  collectiveRoomType               Int             @default(-1)
  standardRateCode                 Int             @default(-1)
  standardAdults                   Int             @default(-1)
  numBeds                          Int             @default(-1)
  roomPosition                     Int             @default(-1)
  roomTypePlan                     Int             @default(-1)
  roomPlan                         Int             @default(-1)
  availableOnInternet              Int             @default(-1)
  freeAttributeOne                 String          @default("") @db.VarChar(25)
  freeAttributeTwo                 String          @default("") @db.VarChar(25)
  freeAttributeThree               String          @default("") @db.VarChar(25)
  freeAttributeFour                String          @default("") @db.VarChar(25)
  gdsSystemFeatures                Int             @default(-1)
  isRevenueExempt                  Int             @default(-1)
  inventoryCategory                Int             @default(-1)
  isSuite                          Int             @default(-1)
  active                           Int             @default(1)
  createdAt                        DateTime        @default(now()) @db.Timestamp(0)
  createdBy                        Int
  updatedAt                        DateTime        @default(now()) @db.Timestamp(0)
  updatedBy                        Int?
  blockedRooms                     blockedRooms[]
  rooms                            rooms[]
  properties                       properties      @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "roomTypes_properties")
  roomtypesgroups                  roomtypesgroups @relation(fields: [groupID], references: [roomTypeGroupID], onDelete: NoAction, onUpdate: NoAction, map: "roomTypes_roomTypesGroups")
  users_roomtypes_createdByTousers users           @relation("roomtypes_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "roomTypes_users_1")
  users_roomtypes_updatedByTousers users?          @relation("roomtypes_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "roomTypes_users_2")

  @@index([propertyID], map: "roomTypes_properties_idx")
  @@index([groupID], map: "roomTypes_roomTypesGroups")
  @@index([createdBy], map: "roomTypes_users_1_idx")
  @@index([updatedBy], map: "roomTypes_users_2_idx")
}

model roomtypesgroups {
  roomTypeGroupID                        Int         @id @default(autoincrement())
  propertyID                             Int
  label                                  String      @default("") @db.VarChar(50)
  active                                 Int         @default(1)
  createdAt                              DateTime    @default(now()) @db.Timestamp(0)
  createdBy                              Int
  updatedAt                              DateTime    @default(now()) @db.Timestamp(0)
  updatedBy                              Int?
  roomtypes                              roomtypes[]
  properties                             properties  @relation(fields: [propertyID], references: [propertyID], onDelete: NoAction, onUpdate: NoAction, map: "roomtypesgroups_properties")
  users_roomtypesgroups_createdByTousers users       @relation("roomtypesgroups_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "roomtypesgroups_users_1")
  users_roomtypesgroups_updatedByTousers users?      @relation("roomtypesgroups_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "roomtypesgroups_users_2")

  @@index([propertyID], map: "roomtypesgroups_properties_idx")
  @@index([createdBy], map: "roomtypesgroups_users_1_idx")
  @@index([updatedBy], map: "roomtypesgroups_users_2_idx")
}

model salutions {
  salutationID                     Int      @id @default(autoincrement())
  salutation                       String   @default("") @db.VarChar(40)
  salutationCode                   String   @default("") @db.VarChar(70)
  title                            String   @default("") @db.VarChar(20)
  suffix                           String   @default("") @db.VarChar(20)
  sortNumber                       Int      @default(-1)
  language                         Int      @default(-1)
  type                             Int      @default(-1)
  inet                             Int      @default(-1)
  createdAt                        DateTime @default(now()) @db.Timestamp(0)
  createdBy                        Int
  updatedAt                        DateTime @default(now()) @db.Timestamp(0)
  updatedBy                        Int?
  users_salutions_createdByTousers users    @relation("salutions_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "salutions_users_1")
  users_salutions_updatedByTousers users?   @relation("salutions_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "salutions_users_2")

  @@index([createdBy], map: "salutions_users_1_idx")
  @@index([updatedBy], map: "salutions_users_2_idx")
}

model seasons {
  seasonID                       Int      @id @default(autoincrement())
  sortNo                         Int      @default(-1)
  desc                           String   @default("") @db.VarChar(255)
  startDate                      DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  endDate                        DateTime @default(dbgenerated("'1900-01-01 00:00:00'")) @db.DateTime(0)
  bez                            String   @default("") @db.VarChar(50)
  createdAt                      DateTime @default(now()) @db.Timestamp(0)
  createdBy                      Int
  updatedAt                      DateTime @default(now()) @db.Timestamp(0)
  updatedBy                      Int?
  users_seasons_createdByTousers users    @relation("seasons_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "seasons_users_1")
  users_seasons_updatedByTousers users?   @relation("seasons_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "seasons_users_2")

  @@index([createdBy], map: "seasons_users_1_idx")
  @@index([updatedBy], map: "seasons_users_2_idx")
}

model source {
  hotelID                       Int      @default(-1)
  sourceNumber                  Int      @id @default(autoincrement())
  name                          String   @default("") @db.VarChar(30)
  groupCode                     String   @default("") @db.VarChar(20)
  quantity                      Int      @default(-1)
  hiddenInFrontOffice           Int      @default(-1)
  availability                  Int      @default(-1)
  typeFlag                      Int      @default(-1)
  sortingKey                    String   @default("") @db.VarChar(3)
  headquarterReference          String   @default("") @db.VarChar(10)
  extendedText                  String   @default("") @db.VarChar(1000)
  createdAt                     DateTime @default(now()) @db.Timestamp(0)
  createdBy                     Int
  updatedAt                     DateTime @default(now()) @db.Timestamp(0)
  updatedBy                     Int?
  users_source_createdByTousers users    @relation("source_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "source_users_1")
  users_source_updatedByTousers users?   @relation("source_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "source_users_2")

  @@index([createdBy], map: "source_users_1_idx")
  @@index([updatedBy], map: "source_users_2_idx")
}

model statustype {
  statustypeID                      Int      @id @default(autoincrement())
  abreviature                       String   @default("") @db.VarChar(200)
  description                       String   @default("") @db.VarChar(250)
  createdAt                         DateTime @default(now()) @db.Timestamp(0)
  createdBy                         Int
  updatedAt                         DateTime @default(now()) @db.Timestamp(0)
  updatedBy                         Int?
  users_statustype_createdByTousers users    @relation("statustype_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "statustype_users_1")
  users_statustype_updatedByTousers users?   @relation("statustype_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "statustype_users_2")

  @@index([createdBy], map: "statustype_users_1_idx")
  @@index([updatedBy], map: "statustype_users_2_idx")
}

model taxes {
  recordShortName              Decimal  @default(-1) @db.Decimal(10, 0)
  recordName                   Int      @default(-1)
  taxesID                      Int      @id @default(autoincrement())
  mainGroup                    String   @default("\"") @db.VarChar(50)
  paymentType                  String   @default("\"") @db.VarChar(15)
  creditLimitCheck             Int      @default(-1)
  createdAt                    DateTime @default(now()) @db.Timestamp(0)
  createdBy                    Int
  updatedAt                    DateTime @default(now()) @db.Timestamp(0)
  updatedBy                    Int?
  users_taxes_createdByTousers users    @relation("taxes_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "taxes_users_1")
  users_taxes_updatedByTousers users?   @relation("taxes_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "taxes_users_2")

  @@index([createdBy], map: "taxes_users_1_idx")
  @@index([updatedBy], map: "taxes_users_2_idx")
}

model transfers {
  refID                            Int      @id @default(autoincrement())
  class                            Int      @default(-1)
  name                             String   @default("") @db.VarChar(250)
  shortName                        String   @default("") @db.VarChar(50)
  para                             String   @default("") @db.VarChar(100)
  para2                            String   @default("") @db.VarChar(100)
  para3                            Int      @default(-1)
  para4                            Int      @default(-1)
  para5                            Int      @default(-1)
  para6                            Int      @default(-1)
  para7                            Int      @default(-1)
  para8                            String   @default("") @db.VarChar(250)
  groupKey                         String   @default("") @db.VarChar(50)
  sortKey                          Int      @default(-1)
  icon                             Int      @default(-1)
  del                              Int      @default(-1) @map("_del")
  dontShow                         Int      @default(-1)
  hidefo                           Int      @default(-1)
  lockDel                          Int      @default(-1)
  inet                             Int      @default(-1)
  createdAt                        DateTime @default(now()) @db.Timestamp(0)
  createdBy                        Int
  updatedAt                        DateTime @default(now()) @db.Timestamp(0)
  updatedBy                        Int?
  users_transfers_createdByTousers users    @relation("transfers_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "transfers_users_1")
  users_transfers_updatedByTousers users?   @relation("transfers_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "transfers_users_2")

  @@index([createdBy], map: "transfers_users_1_idx")
  @@index([updatedBy], map: "transfers_users_2_idx")
}

model users {
  userID                                                       Int                     @id @default(autoincrement())
  name                                                         String                  @db.VarChar(250)
  lastName                                                     String                  @db.VarChar(250)
  email                                                        String                  @unique(map: "email_UNIQUE") @db.VarChar(250)
  fiscalNumber                                                 Int                     @unique(map: "fiscalNumber_UNIQUE")
  phoneNumber                                                  Int                     @unique(map: "phoneNumber_UNIQUE")
  address1                                                     String                  @db.VarChar(250)
  address2                                                     String                  @db.VarChar(250)
  country                                                      String                  @db.VarChar(250)
  district                                                     String                  @db.VarChar(250)
  zipCode                                                      String                  @db.VarChar(45)
  password                                                     String                  @db.VarChar(250)
  organizationID                                               Int
  roleID                                                       Int
  admin                                                        Boolean                 @default(dbgenerated("b'0'")) @db.Bit(1)
  accountsGroups_accountsGroups_createdByTousers               accountsGroups[]        @relation("accountsGroups_createdByTousers")
  accountsGroups_accountsGroups_updatedByTousers               accountsGroups[]        @relation("accountsGroups_updatedByTousers")
  banketReservations_banketReservations_createdByTousers       banketReservations[]    @relation("banketReservations_createdByTousers")
  banketReservations_banketReservations_updatedByTousers       banketReservations[]    @relation("banketReservations_updatedByTousers")
  blockedRooms_blockedRooms_createdByTousers                   blockedRooms[]          @relation("blockedRooms_createdByTousers")
  blockedRooms_blockedRooms_updatedByTousers                   blockedRooms[]          @relation("blockedRooms_updatedByTousers")
  cancelationsreasons_cancelationsreasons_createdByTousers     cancelationsreasons[]   @relation("cancelationsreasons_createdByTousers")
  cancelationsreasons_cancelationsreasons_updatedByTousers     cancelationsreasons[]   @relation("cancelationsreasons_updatedByTousers")
  cancelationtypes_cancelationtypes_createdByTousers           cancelationtypes[]      @relation("cancelationtypes_createdByTousers")
  cancelationtypes_cancelationtypes_updatedByTousers           cancelationtypes[]      @relation("cancelationtypes_updatedByTousers")
  cancelledReservations_cancelledReservations_createdByTousers cancelledReservations[] @relation("cancelledReservations_createdByTousers")
  cancelledReservations_cancelledReservations_updatedByTousers cancelledReservations[] @relation("cancelledReservations_updatedByTousers")
  cashiers_cashiers_createdByTousers                           cashiers[]              @relation("cashiers_createdByTousers")
  cashiers_cashiers_updatedByTousers                           cashiers[]              @relation("cashiers_updatedByTousers")
  characteristics_characteristics_createdByTousers             characteristics[]       @relation("characteristics_createdByTousers")
  characteristics_characteristics_updatedByTousers             characteristics[]       @relation("characteristics_updatedByTousers")
  come_come_createdByTousers                                   come[]                  @relation("come_createdByTousers")
  come_come_updatedByTousers                                   come[]                  @relation("come_updatedByTousers")
  contacts_contacts_createdByTousers                           contacts[]              @relation("contacts_createdByTousers")
  contacts_contacts_updatedByTousers                           contacts[]              @relation("contacts_updatedByTousers")
  country_country_createdByTousers                             country[]               @relation("country_createdByTousers")
  country_country_updatedByTousers                             country[]               @relation("country_updatedByTousers")
  customerPreferences_customerPreferences_createdByTousers     customerPreferences[]   @relation("customerPreferences_createdByTousers")
  customerPreferences_customerPreferences_updatedByTousers     customerPreferences[]   @relation("customerPreferences_updatedByTousers")
  departments_departments_createdByTousers                     departments[]           @relation("departments_createdByTousers")
  departments_departments_updatedByTousers                     departments[]           @relation("departments_updatedByTousers")
  doctypes_doctypes_createdByTousers                           doctypes[]              @relation("doctypes_createdByTousers")
  doctypes_doctypes_updatedByTousers                           doctypes[]              @relation("doctypes_updatedByTousers")
  formsofknowledge_formsofknowledge_createdByTousers           formsofknowledge[]      @relation("formsofknowledge_createdByTousers")
  formsofknowledge_formsofknowledge_updatedByTousers           formsofknowledge[]      @relation("formsofknowledge_updatedByTousers")
  genders_genders_createdByTousers                             genders[]               @relation("genders_createdByTousers")
  genders_genders_updatedByTousers                             genders[]               @relation("genders_updatedByTousers")
  groupratecodes_groupratecodes_createdByTousers               groupratecodes[]        @relation("groupratecodes_createdByTousers")
  groupratecodes_groupratecodes_updatedByTousers               groupratecodes[]        @relation("groupratecodes_updatedByTousers")
  guestAddress_guestAddress_createdByTousers                   guestAddress[]          @relation("guestAddress_createdByTousers")
  guestAddress_guestAddress_updatedByTousers                   guestAddress[]          @relation("guestAddress_updatedByTousers")
  guestEmails_guestEmails_createdByTousers                     guestEmails[]           @relation("guestEmails_createdByTousers")
  guestEmails_guestEmails_updatedByTousers                     guestEmails[]           @relation("guestEmails_updatedByTousers")
  guestLocality_guestLocality_createdByTousers                 guestLocality[]         @relation("guestLocality_createdByTousers")
  guestLocality_guestLocality_updatedByTousers                 guestLocality[]         @relation("guestLocality_updatedByTousers")
  guestNIFs_guestNIFs_createdByTousers                         guestNIFs[]             @relation("guestNIFs_createdByTousers")
  guestNIFs_guestNIFs_updatedByTousers                         guestNIFs[]             @relation("guestNIFs_updatedByTousers")
  guestPhone_guestPhone_createdByTousers                       guestPhone[]            @relation("guestPhone_createdByTousers")
  guestPhone_guestPhone_updatedByTousers                       guestPhone[]            @relation("guestPhone_updatedByTousers")
  guestProfile_guestProfile_createdByTousers                   guestProfile[]          @relation("guestProfile_createdByTousers")
  guestProfile_guestProfile_updatedByTousers                   guestProfile[]          @relation("guestProfile_updatedByTousers")
  guestZipCode_guestZipCode_createdByTousers                   guestZipCode[]          @relation("guestZipCode_createdByTousers")
  guestZipCode_guestZipCode_updatedByTousers                   guestZipCode[]          @relation("guestZipCode_updatedByTousers")
  hear_hear_createdByTousers                                   hear[]                  @relation("hear_createdByTousers")
  hear_hear_updatedByTousers                                   hear[]                  @relation("hear_updatedByTousers")
  knowledgemethod_knowledgemethod_createdByTousers             knowledgemethod[]       @relation("knowledgemethod_createdByTousers")
  knowledgemethod_knowledgemethod_updatedByTousers             knowledgemethod[]       @relation("knowledgemethod_updatedByTousers")
  lostAndFound_lostAndFound_createdByTousers                   lostAndFound[]          @relation("lostAndFound_createdByTousers")
  lostAndFound_lostAndFound_updatedByTousers                   lostAndFound[]          @relation("lostAndFound_updatedByTousers")
  maintenance_maintenance_createdByTousers                     maintenance[]           @relation("maintenance_createdByTousers")
  maintenance_maintenance_updatedByTousers                     maintenance[]           @relation("maintenance_updatedByTousers")
  market_market_createdByTousers                               market[]                @relation("market_createdByTousers")
  market_market_updatedByTousers                               market[]                @relation("market_updatedByTousers")
  marketing_marketing_createdByTousers                         marketing[]             @relation("marketing_createdByTousers")
  marketing_marketing_updatedByTousers                         marketing[]             @relation("marketing_updatedByTousers")
  marketsegments_marketsegments_createdByTousers               marketsegments[]        @relation("marketsegments_createdByTousers")
  marketsegments_marketsegments_updatedByTousers               marketsegments[]        @relation("marketsegments_updatedByTousers")
  member_member_createdByTousers                               member[]                @relation("member_createdByTousers")
  member_member_updatedByTousers                               member[]                @relation("member_updatedByTousers")
  mpehide_mpehide_createdByTousers                             mpehide[]               @relation("mpehide_createdByTousers")
  mpehide_mpehide_updatedByTousers                             mpehide[]               @relation("mpehide_updatedByTousers")
  nationalities_nationalities_createdByTousers                 nationalities[]         @relation("nationalities_createdByTousers")
  nationalities_nationalities_updatedByTousers                 nationalities[]         @relation("nationalities_updatedByTousers")
  oldReservations                                              oldReservations[]
  paymentmethods_paymentmethods_createdByTousers               paymentmethods[]        @relation("paymentmethods_createdByTousers")
  paymentmethods_paymentmethods_updatedByTousers               paymentmethods[]        @relation("paymentmethods_updatedByTousers")
  profession_profession_createdByTousers                       profession[]            @relation("profession_createdByTousers")
  profession_profession_updatedByTousers                       profession[]            @relation("profession_updatedByTousers")
  ratecodedetails_ratecodedetails_createdByTousers             ratecodedetails[]       @relation("ratecodedetails_createdByTousers")
  ratecodedetails_ratecodedetails_updatedByTousers             ratecodedetails[]       @relation("ratecodedetails_updatedByTousers")
  ratecodes_ratecodes_createdByTousers                         ratecodes[]             @relation("ratecodes_createdByTousers")
  ratecodes_ratecodes_updatedByTousers                         ratecodes[]             @relation("ratecodes_updatedByTousers")
  replacementcode_replacementcode_createdByTousers             replacementcode[]       @relation("replacementcode_createdByTousers")
  replacementcode_replacementcode_updatedByTousers             replacementcode[]       @relation("replacementcode_updatedByTousers")
  reservationchange_reservationchange_createdByTousers         reservationchange[]     @relation("reservationchange_createdByTousers")
  reservationchange_reservationchange_updatedByTousers         reservationchange[]     @relation("reservationchange_updatedByTousers")
  reservations_reservations_createdByTousers                   reservations[]          @relation("reservations_createdByTousers")
  reservations_reservations_updatedByTousers                   reservations[]          @relation("reservations_updatedByTousers")
  reservationstatus_reservationstatus_createdByTousers         reservationstatus[]     @relation("reservationstatus_createdByTousers")
  reservationstatus_reservationstatus_updatedByTousers         reservationstatus[]     @relation("reservationstatus_updatedByTousers")
  revenueAccounts_revenueAccounts_createdByTousers             revenueAccounts[]       @relation("revenueAccounts_createdByTousers")
  revenueAccounts_revenueAccounts_updatedByTousers             revenueAccounts[]       @relation("revenueAccounts_updatedByTousers")
  rooms_rooms_createdByTousers                                 rooms[]                 @relation("rooms_createdByTousers")
  rooms_rooms_updatedByTousers                                 rooms[]                 @relation("rooms_updatedByTousers")
  rooms_characteristics_rooms_characteristics_createdByTousers rooms_characteristics[] @relation("rooms_characteristics_createdByTousers")
  rooms_characteristics_rooms_characteristics_updatedByTousers rooms_characteristics[] @relation("rooms_characteristics_updatedByTousers")
  roomtypes_roomtypes_createdByTousers                         roomtypes[]             @relation("roomtypes_createdByTousers")
  roomtypes_roomtypes_updatedByTousers                         roomtypes[]             @relation("roomtypes_updatedByTousers")
  roomtypesgroups_roomtypesgroups_createdByTousers             roomtypesgroups[]       @relation("roomtypesgroups_createdByTousers")
  roomtypesgroups_roomtypesgroups_updatedByTousers             roomtypesgroups[]       @relation("roomtypesgroups_updatedByTousers")
  salutions_salutions_createdByTousers                         salutions[]             @relation("salutions_createdByTousers")
  salutions_salutions_updatedByTousers                         salutions[]             @relation("salutions_updatedByTousers")
  seasons_seasons_createdByTousers                             seasons[]               @relation("seasons_createdByTousers")
  seasons_seasons_updatedByTousers                             seasons[]               @relation("seasons_updatedByTousers")
  source_source_createdByTousers                               source[]                @relation("source_createdByTousers")
  source_source_updatedByTousers                               source[]                @relation("source_updatedByTousers")
  statustype_statustype_createdByTousers                       statustype[]            @relation("statustype_createdByTousers")
  statustype_statustype_updatedByTousers                       statustype[]            @relation("statustype_updatedByTousers")
  taxes_taxes_createdByTousers                                 taxes[]                 @relation("taxes_createdByTousers")
  taxes_taxes_updatedByTousers                                 taxes[]                 @relation("taxes_updatedByTousers")
  transfers_transfers_createdByTousers                         transfers[]             @relation("transfers_createdByTousers")
  transfers_transfers_updatedByTousers                         transfers[]             @relation("transfers_updatedByTousers")
  vipcode_vipcode_createdByTousers                             vipcode[]               @relation("vipcode_createdByTousers")
  vipcode_vipcode_updatedByTousers                             vipcode[]               @relation("vipcode_updatedByTousers")
}

model vipcode {
  identifier                     String   @default("") @db.VarChar(20)
  description                    String   @default("") @db.VarChar(40)
  customerCode                   Int      @id @default(autoincrement())
  reservationBlock               Int      @default(-1)
  reservationReminder            Int      @default(-1)
  reservationText                String   @default("") @db.VarChar(120)
  visibleInFrontOffice           Int      @default(-1)
  sortingKey                     String   @default("") @db.VarChar(10)
  createdAt                      DateTime @default(now()) @db.Timestamp(0)
  createdBy                      Int
  updatedAt                      DateTime @default(now()) @db.Timestamp(0)
  updatedBy                      Int?
  users_vipcode_createdByTousers users    @relation("vipcode_createdByTousers", fields: [createdBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "vipcode_users_1")
  users_vipcode_updatedByTousers users?   @relation("vipcode_updatedByTousers", fields: [updatedBy], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "vipcode_users_2")

  @@index([createdBy], map: "vipcode_users_1_idx")
  @@index([updatedBy], map: "vipcode_users_2_idx")
}
